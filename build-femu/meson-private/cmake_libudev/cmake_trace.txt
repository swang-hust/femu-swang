/home/wangshuai/femu-swang/build-femu/meson-private/cmake_libudev/CMakeLists.txt(2):  cmake_minimum_required(VERSION 3.16.3 )
/home/wangshuai/femu-swang/build-femu/meson-private/cmake_libudev/CMakeLists.txt(3):  project(MesonTemp LANGUAGES C CXX )
/home/wangshuai/femu-swang/build-femu/meson-private/cmake_libudev/CMakeFiles/3.16.3/CMakeSystem.cmake(1):  set(CMAKE_HOST_SYSTEM Linux-5.11.0-37-generic )
/home/wangshuai/femu-swang/build-femu/meson-private/cmake_libudev/CMakeFiles/3.16.3/CMakeSystem.cmake(2):  set(CMAKE_HOST_SYSTEM_NAME Linux )
/home/wangshuai/femu-swang/build-femu/meson-private/cmake_libudev/CMakeFiles/3.16.3/CMakeSystem.cmake(3):  set(CMAKE_HOST_SYSTEM_VERSION 5.11.0-37-generic )
/home/wangshuai/femu-swang/build-femu/meson-private/cmake_libudev/CMakeFiles/3.16.3/CMakeSystem.cmake(4):  set(CMAKE_HOST_SYSTEM_PROCESSOR x86_64 )
/home/wangshuai/femu-swang/build-femu/meson-private/cmake_libudev/CMakeFiles/3.16.3/CMakeSystem.cmake(8):  set(CMAKE_SYSTEM Linux-5.11.0-37-generic )
/home/wangshuai/femu-swang/build-femu/meson-private/cmake_libudev/CMakeFiles/3.16.3/CMakeSystem.cmake(9):  set(CMAKE_SYSTEM_NAME Linux )
/home/wangshuai/femu-swang/build-femu/meson-private/cmake_libudev/CMakeFiles/3.16.3/CMakeSystem.cmake(10):  set(CMAKE_SYSTEM_VERSION 5.11.0-37-generic )
/home/wangshuai/femu-swang/build-femu/meson-private/cmake_libudev/CMakeFiles/3.16.3/CMakeSystem.cmake(11):  set(CMAKE_SYSTEM_PROCESSOR x86_64 )
/home/wangshuai/femu-swang/build-femu/meson-private/cmake_libudev/CMakeFiles/3.16.3/CMakeSystem.cmake(13):  set(CMAKE_CROSSCOMPILING FALSE )
/home/wangshuai/femu-swang/build-femu/meson-private/cmake_libudev/CMakeFiles/3.16.3/CMakeSystem.cmake(15):  set(CMAKE_SYSTEM_LOADED 1 )
/usr/share/cmake-3.16/Modules/CMakeUnixFindMake.cmake(5):  find_program(CMAKE_MAKE_PROGRAM NAMES gmake make smake )
/usr/share/cmake-3.16/Modules/CMakeUnixFindMake.cmake(6):  mark_as_advanced(CMAKE_MAKE_PROGRAM )
/usr/share/cmake-3.16/Modules/CMakeUnixFindMake.cmake(9):  if(NOT CMAKE_MAKE_PROGRAM AND CMAKE_HOST_APPLE )
/usr/share/cmake-3.16/Modules/CMakeSystemSpecificInitialize.cmake(19):  set(CMAKE_EFFECTIVE_SYSTEM_NAME Linux )
/usr/share/cmake-3.16/Modules/CMakeSystemSpecificInitialize.cmake(21):  include(Platform/Linux-Initialize OPTIONAL )
/usr/share/cmake-3.16/Modules/CMakeSystemSpecificInitialize.cmake(23):  set(CMAKE_SYSTEM_SPECIFIC_INITIALIZE_LOADED 1 )
/home/wangshuai/femu-swang/build-femu/meson-private/cmake_libudev/CMakeFiles/3.16.3/CMakeCCompiler.cmake(2):  set(CMAKE_C_COMPILER /usr/bin/cc )
/home/wangshuai/femu-swang/build-femu/meson-private/cmake_libudev/CMakeFiles/3.16.3/CMakeCCompiler.cmake(3):  set(CMAKE_C_COMPILER_LAUNCHER  )
/home/wangshuai/femu-swang/build-femu/meson-private/cmake_libudev/CMakeFiles/3.16.3/CMakeCCompiler.cmake(4):  set(CMAKE_COMPILER_IS_GNUCC 1 )
/home/wangshuai/femu-swang/build-femu/meson-private/cmake_libudev/CMakeFiles/3.16.3/CMakeCCompiler.cmake(5):  set(CMAKE_C_COMPILER_ID GNU )
/home/wangshuai/femu-swang/build-femu/meson-private/cmake_libudev/CMakeFiles/3.16.3/CMakeCCompiler.cmake(6):  set(CMAKE_C_COMPILER_VERSION 9.3.0 )
/home/wangshuai/femu-swang/build-femu/meson-private/cmake_libudev/CMakeFiles/3.16.3/CMakeCCompiler.cmake(7):  set(CMAKE_C_COMPILER_LOADED 1 )
/home/wangshuai/femu-swang/build-femu/meson-private/cmake_libudev/CMakeFiles/3.16.3/CMakeCCompiler.cmake(8):  set(CMAKE_C_COMPILER_FORCED 1 )
/home/wangshuai/femu-swang/build-femu/meson-private/cmake_libudev/CMakeFiles/3.16.3/CMakeCCompiler.cmake(9):  set(CMAKE_C_COMPILER_WORKS TRUE )
/home/wangshuai/femu-swang/build-femu/meson-private/cmake_libudev/CMakeFiles/3.16.3/CMakeCCompiler.cmake(10):  set(CMAKE_C_ABI_COMPILED TRUE )
/home/wangshuai/femu-swang/build-femu/meson-private/cmake_libudev/CMakeFiles/3.16.3/CMakeCCompiler.cmake(11):  set(CMAKE_C_SOURCE_FILE_EXTENSIONS c;m )
/home/wangshuai/femu-swang/build-femu/meson-private/cmake_libudev/CMakeFiles/3.16.3/CMakeCCompiler.cmake(12):  set(CMAKE_C_IGNORE_EXTENSIONS h;H;o;O;obj;OBJ;def;DEF;rc;RC )
/home/wangshuai/femu-swang/build-femu/meson-private/cmake_libudev/CMakeFiles/3.16.3/CMakeCCompiler.cmake(13):  set(CMAKE_SIZEOF_VOID_P 8 )
/home/wangshuai/femu-swang/build-femu/meson-private/cmake_libudev/CMakeFiles/3.16.3/CMakeCXXCompiler.cmake(2):  set(CMAKE_CXX_COMPILER /usr/bin/c++ )
/home/wangshuai/femu-swang/build-femu/meson-private/cmake_libudev/CMakeFiles/3.16.3/CMakeCXXCompiler.cmake(3):  set(CMAKE_CXX_COMPILER_LAUNCHER  )
/home/wangshuai/femu-swang/build-femu/meson-private/cmake_libudev/CMakeFiles/3.16.3/CMakeCXXCompiler.cmake(4):  set(CMAKE_COMPILER_IS_GNUCXX 1 )
/home/wangshuai/femu-swang/build-femu/meson-private/cmake_libudev/CMakeFiles/3.16.3/CMakeCXXCompiler.cmake(5):  set(CMAKE_CXX_COMPILER_ID GNU )
/home/wangshuai/femu-swang/build-femu/meson-private/cmake_libudev/CMakeFiles/3.16.3/CMakeCXXCompiler.cmake(6):  set(CMAKE_CXX_COMPILER_VERSION 9.3.0 )
/home/wangshuai/femu-swang/build-femu/meson-private/cmake_libudev/CMakeFiles/3.16.3/CMakeCXXCompiler.cmake(7):  set(CMAKE_CXX_COMPILER_LOADED 1 )
/home/wangshuai/femu-swang/build-femu/meson-private/cmake_libudev/CMakeFiles/3.16.3/CMakeCXXCompiler.cmake(8):  set(CMAKE_CXX_COMPILER_FORCED 1 )
/home/wangshuai/femu-swang/build-femu/meson-private/cmake_libudev/CMakeFiles/3.16.3/CMakeCXXCompiler.cmake(9):  set(CMAKE_CXX_COMPILER_WORKS TRUE )
/home/wangshuai/femu-swang/build-femu/meson-private/cmake_libudev/CMakeFiles/3.16.3/CMakeCXXCompiler.cmake(10):  set(CMAKE_CXX_ABI_COMPILED TRUE )
/home/wangshuai/femu-swang/build-femu/meson-private/cmake_libudev/CMakeFiles/3.16.3/CMakeCXXCompiler.cmake(11):  set(CMAKE_CXX_IGNORE_EXTENSIONS inl;h;hpp;HPP;H;o;O;obj;OBJ;def;DEF;rc;RC )
/home/wangshuai/femu-swang/build-femu/meson-private/cmake_libudev/CMakeFiles/3.16.3/CMakeCXXCompiler.cmake(12):  set(CMAKE_CXX_SOURCE_FILE_EXTENSIONS C;M;c++;cc;cpp;cxx;mm;CPP )
/home/wangshuai/femu-swang/build-femu/meson-private/cmake_libudev/CMakeFiles/3.16.3/CMakeCXXCompiler.cmake(13):  set(CMAKE_SIZEOF_VOID_P 8 )
/usr/share/cmake-3.16/Modules/CMakeSystemSpecificInformation.cmake(14):  set(APPLE )
/usr/share/cmake-3.16/Modules/CMakeSystemSpecificInformation.cmake(15):  set(UNIX )
/usr/share/cmake-3.16/Modules/CMakeSystemSpecificInformation.cmake(16):  set(CYGWIN )
/usr/share/cmake-3.16/Modules/CMakeSystemSpecificInformation.cmake(17):  set(WIN32 )
/usr/share/cmake-3.16/Modules/CMakeSystemSpecificInformation.cmake(21):  include(CMakeGenericSystem )
/usr/share/cmake-3.16/Modules/CMakeGenericSystem.cmake(4):  include(CMakeInitializeConfigs )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(4):  include_guard(GLOBAL )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(8):  function(cmake_initialize_per_config_variable _PREFIX _DOCSTRING )
/usr/share/cmake-3.16/Modules/CMakeGenericSystem.cmake(6):  set(CMAKE_SHARED_LIBRARY_C_FLAGS  )
/usr/share/cmake-3.16/Modules/CMakeGenericSystem.cmake(7):  set(CMAKE_SHARED_LIBRARY_CREATE_C_FLAGS -shared )
/usr/share/cmake-3.16/Modules/CMakeGenericSystem.cmake(8):  set(CMAKE_SHARED_LIBRARY_LINK_C_FLAGS  )
/usr/share/cmake-3.16/Modules/CMakeGenericSystem.cmake(9):  set(CMAKE_SHARED_LIBRARY_RUNTIME_C_FLAG  )
/usr/share/cmake-3.16/Modules/CMakeGenericSystem.cmake(10):  set(CMAKE_SHARED_LIBRARY_RUNTIME_C_FLAG_SEP  )
/usr/share/cmake-3.16/Modules/CMakeGenericSystem.cmake(11):  set(CMAKE_INCLUDE_FLAG_C -I )
/usr/share/cmake-3.16/Modules/CMakeGenericSystem.cmake(12):  set(CMAKE_LIBRARY_PATH_FLAG -L )
/usr/share/cmake-3.16/Modules/CMakeGenericSystem.cmake(13):  set(CMAKE_LIBRARY_PATH_TERMINATOR  )
/usr/share/cmake-3.16/Modules/CMakeGenericSystem.cmake(14):  set(CMAKE_LINK_LIBRARY_FLAG -l )
/usr/share/cmake-3.16/Modules/CMakeGenericSystem.cmake(16):  set(CMAKE_LINK_LIBRARY_SUFFIX  )
/usr/share/cmake-3.16/Modules/CMakeGenericSystem.cmake(17):  set(CMAKE_STATIC_LIBRARY_PREFIX lib )
/usr/share/cmake-3.16/Modules/CMakeGenericSystem.cmake(18):  set(CMAKE_STATIC_LIBRARY_SUFFIX .a )
/usr/share/cmake-3.16/Modules/CMakeGenericSystem.cmake(19):  set(CMAKE_SHARED_LIBRARY_PREFIX lib )
/usr/share/cmake-3.16/Modules/CMakeGenericSystem.cmake(20):  set(CMAKE_SHARED_LIBRARY_SUFFIX .so )
/usr/share/cmake-3.16/Modules/CMakeGenericSystem.cmake(21):  set(CMAKE_EXECUTABLE_SUFFIX  )
/usr/share/cmake-3.16/Modules/CMakeGenericSystem.cmake(22):  set(CMAKE_DL_LIBS dl )
/usr/share/cmake-3.16/Modules/CMakeGenericSystem.cmake(24):  set(CMAKE_FIND_LIBRARY_PREFIXES lib )
/usr/share/cmake-3.16/Modules/CMakeGenericSystem.cmake(25):  set(CMAKE_FIND_LIBRARY_SUFFIXES .so .a )
/usr/share/cmake-3.16/Modules/CMakeGenericSystem.cmake(27):  set(CMAKE_AUTOGEN_ORIGIN_DEPENDS ON )
/usr/share/cmake-3.16/Modules/CMakeGenericSystem.cmake(28):  set(CMAKE_AUTOMOC_COMPILER_PREDEFINES ON )
/usr/share/cmake-3.16/Modules/CMakeGenericSystem.cmake(29):  set(CMAKE_AUTOMOC_PATH_PREFIX ON )
/usr/share/cmake-3.16/Modules/CMakeGenericSystem.cmake(30):  set(CMAKE_AUTOMOC_MACRO_NAMES Q_OBJECT Q_GADGET Q_NAMESPACE )
/usr/share/cmake-3.16/Modules/CMakeGenericSystem.cmake(33):  set_property(GLOBAL PROPERTY TARGET_SUPPORTS_SHARED_LIBS TRUE )
/usr/share/cmake-3.16/Modules/CMakeGenericSystem.cmake(35):  set(CMAKE_SKIP_RPATH NO CACHE BOOL If set, runtime paths are not added when using shared libraries. )
/usr/share/cmake-3.16/Modules/CMakeGenericSystem.cmake(37):  set(CMAKE_SKIP_INSTALL_RPATH NO CACHE BOOL If set, runtime paths are not added when installing shared libraries, but are added when building. )
/usr/share/cmake-3.16/Modules/CMakeGenericSystem.cmake(40):  set(CMAKE_VERBOSE_MAKEFILE FALSE CACHE BOOL If this value is on, makefiles will be generated without the .SILENT directive, and all commands will be echoed to the console during the make.  This is useful for debugging only. With Visual Studio IDE projects all commands are done without /nologo. )
/usr/share/cmake-3.16/Modules/CMakeGenericSystem.cmake(42):  if(CMAKE_GENERATOR MATCHES Make )
/usr/share/cmake-3.16/Modules/CMakeGenericSystem.cmake(43):  set(CMAKE_COLOR_MAKEFILE ON CACHE BOOL Enable/Disable color output during build. )
/usr/share/cmake-3.16/Modules/CMakeGenericSystem.cmake(46):  mark_as_advanced(CMAKE_COLOR_MAKEFILE )
/usr/share/cmake-3.16/Modules/CMakeGenericSystem.cmake(47):  if(DEFINED CMAKE_RULE_MESSAGES )
/usr/share/cmake-3.16/Modules/CMakeGenericSystem.cmake(50):  if(DEFINED CMAKE_TARGET_MESSAGES )
/usr/share/cmake-3.16/Modules/CMakeGenericSystem.cmake(53):  if(CMAKE_GENERATOR MATCHES Unix Makefiles )
/usr/share/cmake-3.16/Modules/CMakeGenericSystem.cmake(54):  set(CMAKE_EXPORT_COMPILE_COMMANDS OFF CACHE BOOL Enable/Disable output of compile commands during generation. )
/usr/share/cmake-3.16/Modules/CMakeGenericSystem.cmake(57):  mark_as_advanced(CMAKE_EXPORT_COMPILE_COMMANDS )
/usr/share/cmake-3.16/Modules/CMakeGenericSystem.cmake(61):  if(CMAKE_GENERATOR MATCHES Ninja )
/usr/share/cmake-3.16/Modules/CMakeGenericSystem.cmake(75):  function(GetDefaultWindowsPrefixBase var )
/usr/share/cmake-3.16/Modules/CMakeGenericSystem.cmake(163):  if(NOT DEFINED CMAKE_INSTALL_PREFIX )
/usr/share/cmake-3.16/Modules/CMakeGenericSystem.cmake(164):  set(CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT 1 )
/usr/share/cmake-3.16/Modules/CMakeGenericSystem.cmake(168):  if(CMAKE_HOST_UNIX )
/usr/share/cmake-3.16/Modules/CMakeGenericSystem.cmake(169):  set(CMAKE_INSTALL_PREFIX /usr/local CACHE PATH Install path prefix, prepended onto install directories. )
/usr/share/cmake-3.16/Modules/CMakeGenericSystem.cmake(181):  set(CMAKE_INSTALL_DEFAULT_COMPONENT_NAME Unspecified )
/usr/share/cmake-3.16/Modules/CMakeGenericSystem.cmake(183):  mark_as_advanced(CMAKE_SKIP_RPATH CMAKE_SKIP_INSTALL_RPATH CMAKE_VERBOSE_MAKEFILE )
/usr/share/cmake-3.16/Modules/CMakeSystemSpecificInformation.cmake(24):  set(CMAKE_SYSTEM_INFO_FILE Platform/Linux )
/usr/share/cmake-3.16/Modules/CMakeSystemSpecificInformation.cmake(26):  include(Platform/Linux OPTIONAL RESULT_VARIABLE _INCLUDED_SYSTEM_INFO_FILE )
/usr/share/cmake-3.16/Modules/Platform/Linux.cmake(1):  set(CMAKE_DL_LIBS dl )
/usr/share/cmake-3.16/Modules/Platform/Linux.cmake(2):  set(CMAKE_SHARED_LIBRARY_RUNTIME_C_FLAG -Wl,-rpath, )
/usr/share/cmake-3.16/Modules/Platform/Linux.cmake(3):  set(CMAKE_SHARED_LIBRARY_RUNTIME_C_FLAG_SEP : )
/usr/share/cmake-3.16/Modules/Platform/Linux.cmake(4):  set(CMAKE_SHARED_LIBRARY_RPATH_ORIGIN_TOKEN $ORIGIN )
/usr/share/cmake-3.16/Modules/Platform/Linux.cmake(5):  set(CMAKE_SHARED_LIBRARY_RPATH_LINK_C_FLAG -Wl,-rpath-link, )
/usr/share/cmake-3.16/Modules/Platform/Linux.cmake(6):  set(CMAKE_SHARED_LIBRARY_SONAME_C_FLAG -Wl,-soname, )
/usr/share/cmake-3.16/Modules/Platform/Linux.cmake(7):  set(CMAKE_EXE_EXPORTS_C_FLAG -Wl,--export-dynamic )
/usr/share/cmake-3.16/Modules/Platform/Linux.cmake(11):  set(CMAKE_PLATFORM_USES_PATH_WHEN_NO_SONAME 1 )
/usr/share/cmake-3.16/Modules/Platform/Linux.cmake(17):  foreach(type SHARED_LIBRARY SHARED_MODULE EXE )
/usr/share/cmake-3.16/Modules/Platform/Linux.cmake(18):  set(CMAKE_SHARED_LIBRARY_LINK_STATIC_C_FLAGS -Wl,-Bstatic )
/usr/share/cmake-3.16/Modules/Platform/Linux.cmake(19):  set(CMAKE_SHARED_LIBRARY_LINK_DYNAMIC_C_FLAGS -Wl,-Bdynamic )
/usr/share/cmake-3.16/Modules/Platform/Linux.cmake(18):  set(CMAKE_SHARED_MODULE_LINK_STATIC_C_FLAGS -Wl,-Bstatic )
/usr/share/cmake-3.16/Modules/Platform/Linux.cmake(19):  set(CMAKE_SHARED_MODULE_LINK_DYNAMIC_C_FLAGS -Wl,-Bdynamic )
/usr/share/cmake-3.16/Modules/Platform/Linux.cmake(18):  set(CMAKE_EXE_LINK_STATIC_C_FLAGS -Wl,-Bstatic )
/usr/share/cmake-3.16/Modules/Platform/Linux.cmake(19):  set(CMAKE_EXE_LINK_DYNAMIC_C_FLAGS -Wl,-Bdynamic )
/usr/share/cmake-3.16/Modules/Platform/Linux.cmake(30):  if(DEFINED CMAKE_INSTALL_SO_NO_EXE )
/usr/share/cmake-3.16/Modules/Platform/Linux.cmake(35):  else()
/usr/share/cmake-3.16/Modules/Platform/Linux.cmake(40):  if(EXISTS /etc/debian_version )
/usr/share/cmake-3.16/Modules/Platform/Linux.cmake(41):  set(CMAKE_INSTALL_SO_NO_EXE 1 CACHE INTERNAL Install .so files without execute permission. )
/usr/share/cmake-3.16/Modules/Platform/Linux.cmake(50):  set(CMAKE_LIBRARY_ARCHITECTURE_REGEX [a-z0-9_]+(-[a-z0-9_]+)?-linux-gnu[a-z0-9_]* )
/usr/share/cmake-3.16/Modules/Platform/Linux.cmake(52):  include(Platform/UnixPaths )
/usr/share/cmake-3.16/Modules/Platform/UnixPaths.cmake(10):  if(__UNIX_PATHS_INCLUDED )
/usr/share/cmake-3.16/Modules/Platform/UnixPaths.cmake(13):  set(__UNIX_PATHS_INCLUDED 1 )
/usr/share/cmake-3.16/Modules/Platform/UnixPaths.cmake(15):  set(UNIX 1 )
/usr/share/cmake-3.16/Modules/Platform/UnixPaths.cmake(19):  get_filename_component(_CMAKE_INSTALL_DIR /usr/share/cmake-3.16 PATH )
/usr/share/cmake-3.16/Modules/Platform/UnixPaths.cmake(20):  get_filename_component(_CMAKE_INSTALL_DIR /usr/share PATH )
/usr/share/cmake-3.16/Modules/Platform/UnixPaths.cmake(24):  list(APPEND CMAKE_SYSTEM_PREFIX_PATH /usr/local /usr / /usr )
/usr/share/cmake-3.16/Modules/Platform/UnixPaths.cmake(31):  if(NOT CMAKE_FIND_NO_INSTALL_PREFIX )
/usr/share/cmake-3.16/Modules/Platform/UnixPaths.cmake(32):  list(APPEND CMAKE_SYSTEM_PREFIX_PATH /usr/local )
/usr/share/cmake-3.16/Modules/Platform/UnixPaths.cmake(36):  if(CMAKE_STAGING_PREFIX )
/usr/share/cmake-3.16/Modules/Platform/UnixPaths.cmake(45):  list(APPEND CMAKE_SYSTEM_PREFIX_PATH /usr/X11R6 /usr/pkg /opt )
/usr/share/cmake-3.16/Modules/Platform/UnixPaths.cmake(52):  list(APPEND CMAKE_SYSTEM_INCLUDE_PATH /usr/include/X11 )
/usr/share/cmake-3.16/Modules/Platform/UnixPaths.cmake(57):  list(APPEND CMAKE_SYSTEM_LIBRARY_PATH /usr/lib/X11 )
/usr/share/cmake-3.16/Modules/Platform/UnixPaths.cmake(62):  list(APPEND CMAKE_PLATFORM_IMPLICIT_LINK_DIRECTORIES /lib /lib32 /lib64 /usr/lib /usr/lib32 /usr/lib64 )
/usr/share/cmake-3.16/Modules/Platform/UnixPaths.cmake(66):  if(CMAKE_SYSROOT_COMPILE )
/usr/share/cmake-3.16/Modules/Platform/UnixPaths.cmake(68):  else()
/usr/share/cmake-3.16/Modules/Platform/UnixPaths.cmake(69):  set(_cmake_sysroot_compile  )
/usr/share/cmake-3.16/Modules/Platform/UnixPaths.cmake(74):  set(_CMAKE_C_IMPLICIT_INCLUDE_DIRECTORIES_INIT  /usr/include )
/usr/share/cmake-3.16/Modules/Platform/UnixPaths.cmake(78):  set(_CMAKE_CXX_IMPLICIT_INCLUDE_DIRECTORIES_INIT  /usr/include )
/usr/share/cmake-3.16/Modules/Platform/UnixPaths.cmake(82):  set(_CMAKE_CUDA_IMPLICIT_INCLUDE_DIRECTORIES_INIT  /usr/include )
/usr/share/cmake-3.16/Modules/Platform/UnixPaths.cmake(87):  unset(_cmake_sysroot_compile )
/usr/share/cmake-3.16/Modules/Platform/UnixPaths.cmake(90):  set_property(GLOBAL PROPERTY FIND_LIBRARY_USE_LIB32_PATHS TRUE )
/usr/share/cmake-3.16/Modules/Platform/UnixPaths.cmake(91):  set_property(GLOBAL PROPERTY FIND_LIBRARY_USE_LIB64_PATHS TRUE )
/usr/share/cmake-3.16/Modules/Platform/UnixPaths.cmake(92):  set_property(GLOBAL PROPERTY FIND_LIBRARY_USE_LIBX32_PATHS TRUE )
/usr/share/cmake-3.16/Modules/Platform/Linux.cmake(56):  if(NOT CMAKE_CROSSCOMPILING AND EXISTS /etc/debian_version )
/usr/share/cmake-3.16/Modules/Platform/Linux.cmake(57):  set_property(GLOBAL PROPERTY FIND_LIBRARY_USE_LIB32_PATHS FALSE )
/usr/share/cmake-3.16/Modules/Platform/Linux.cmake(58):  set_property(GLOBAL PROPERTY FIND_LIBRARY_USE_LIB64_PATHS FALSE )
/usr/share/cmake-3.16/Modules/CMakeSystemSpecificInformation.cmake(28):  if(NOT _INCLUDED_SYSTEM_INFO_FILE )
/usr/share/cmake-3.16/Modules/CMakeSystemSpecificInformation.cmake(42):  if(CMAKE_EXTRA_GENERATOR )
/usr/share/cmake-3.16/Modules/CMakeSystemSpecificInformation.cmake(52):  if(NOT CMAKE_MODULE_EXISTS )
/usr/share/cmake-3.16/Modules/CMakeSystemSpecificInformation.cmake(53):  set(CMAKE_SHARED_MODULE_PREFIX lib )
/usr/share/cmake-3.16/Modules/CMakeSystemSpecificInformation.cmake(54):  set(CMAKE_SHARED_MODULE_SUFFIX .so )
/usr/share/cmake-3.16/Modules/CMakeSystemSpecificInformation.cmake(58):  set(CMAKE_SYSTEM_SPECIFIC_INFORMATION_LOADED 1 )
/usr/share/cmake-3.16/Modules/CMakeCInformation.cmake(11):  include(CMakeLanguageInformation )
/usr/share/cmake-3.16/Modules/CMakeLanguageInformation.cmake(9):  macro(__cmake_include_compiler_wrapper lang )
/usr/share/cmake-3.16/Modules/CMakeCInformation.cmake(15):  if(UNIX )
/usr/share/cmake-3.16/Modules/CMakeCInformation.cmake(16):  set(CMAKE_C_OUTPUT_EXTENSION .o )
/usr/share/cmake-3.16/Modules/CMakeCInformation.cmake(21):  set(_INCLUDED_FILE 0 )
/usr/share/cmake-3.16/Modules/CMakeCInformation.cmake(24):  if(CMAKE_C_COMPILER_ID )
/usr/share/cmake-3.16/Modules/CMakeCInformation.cmake(25):  include(Compiler/GNU-C OPTIONAL )
/usr/share/cmake-3.16/Modules/Compiler/GNU-C.cmake(1):  include(Compiler/GNU )
/usr/share/cmake-3.16/Modules/Compiler/GNU.cmake(6):  if(__COMPILER_GNU )
/usr/share/cmake-3.16/Modules/Compiler/GNU.cmake(9):  set(__COMPILER_GNU 1 )
/usr/share/cmake-3.16/Modules/Compiler/GNU.cmake(11):  include(Compiler/CMakeCommonCompilerMacros )
/usr/share/cmake-3.16/Modules/Compiler/CMakeCommonCompilerMacros.cmake(5):  if(__COMPILER_CMAKE_COMMON_COMPILER_MACROS )
/usr/share/cmake-3.16/Modules/Compiler/CMakeCommonCompilerMacros.cmake(8):  set(__COMPILER_CMAKE_COMMON_COMPILER_MACROS 1 )
/usr/share/cmake-3.16/Modules/Compiler/CMakeCommonCompilerMacros.cmake(32):  macro(__compiler_check_default_language_standard lang stdver1 std1 )
/usr/share/cmake-3.16/Modules/Compiler/CMakeCommonCompilerMacros.cmake(65):  macro(cmake_record_c_compile_features )
/usr/share/cmake-3.16/Modules/Compiler/CMakeCommonCompilerMacros.cmake(94):  macro(cmake_record_cxx_compile_features )
/usr/share/cmake-3.16/Modules/Compiler/GNU.cmake(12):  include(Internal/CMakeCheckCompilerFlag )
/usr/share/cmake-3.16/Modules/Internal/CMakeCheckCompilerFlag.cmake(39):  include_guard(GLOBAL )
/usr/share/cmake-3.16/Modules/Internal/CMakeCheckCompilerFlag.cmake(40):  include(CMakeCheckCompilerFlagCommonPatterns )
/usr/share/cmake-3.16/Modules/CMakeCheckCompilerFlagCommonPatterns.cmake(9):  macro(CHECK_COMPILER_FLAG_COMMON_PATTERNS _VAR )
/usr/share/cmake-3.16/Modules/Internal/CMakeCheckCompilerFlag.cmake(42):  function(CMAKE_CHECK_COMPILER_FLAG lang flag result )
/usr/share/cmake-3.16/Modules/Compiler/GNU.cmake(14):  set(__pch_header_C c-header )
/usr/share/cmake-3.16/Modules/Compiler/GNU.cmake(15):  set(__pch_header_CXX c++-header )
/usr/share/cmake-3.16/Modules/Compiler/GNU.cmake(16):  set(__pch_header_OBJC objective-c-header )
/usr/share/cmake-3.16/Modules/Compiler/GNU.cmake(17):  set(__pch_header_OBJCXX objective-c++-header )
/usr/share/cmake-3.16/Modules/Compiler/GNU.cmake(19):  macro(__compiler_gnu lang )
/usr/share/cmake-3.16/Modules/Compiler/GNU-C.cmake(2):  __compiler_gnu(C )
/usr/share/cmake-3.16/Modules/Compiler/GNU.cmake(21):  set(CMAKE_C_VERBOSE_FLAG -v )
/usr/share/cmake-3.16/Modules/Compiler/GNU.cmake(22):  set(CMAKE_C_COMPILE_OPTIONS_PIC -fPIC )
/usr/share/cmake-3.16/Modules/Compiler/GNU.cmake(23):  set(_CMAKE_C_PIE_MAY_BE_SUPPORTED_BY_LINKER NO )
/usr/share/cmake-3.16/Modules/Compiler/GNU.cmake(24):  if(NOT CMAKE_C_COMPILER_VERSION VERSION_LESS 3.4 )
/usr/share/cmake-3.16/Modules/Compiler/GNU.cmake(25):  set(CMAKE_C_COMPILE_OPTIONS_PIE -fPIE )
/usr/share/cmake-3.16/Modules/Compiler/GNU.cmake(28):  set(_CMAKE_C_PIE_MAY_BE_SUPPORTED_BY_LINKER YES )
/usr/share/cmake-3.16/Modules/Compiler/GNU.cmake(29):  set(CMAKE_C_LINK_OPTIONS_PIE -fPIE -pie )
/usr/share/cmake-3.16/Modules/Compiler/GNU.cmake(30):  set(CMAKE_C_LINK_OPTIONS_NO_PIE -no-pie )
/usr/share/cmake-3.16/Modules/Compiler/GNU.cmake(32):  if(NOT CMAKE_C_COMPILER_VERSION VERSION_LESS 4.0 )
/usr/share/cmake-3.16/Modules/Compiler/GNU.cmake(33):  set(CMAKE_C_COMPILE_OPTIONS_VISIBILITY -fvisibility= )
/usr/share/cmake-3.16/Modules/Compiler/GNU.cmake(35):  set(CMAKE_SHARED_LIBRARY_C_FLAGS -fPIC )
/usr/share/cmake-3.16/Modules/Compiler/GNU.cmake(36):  set(CMAKE_SHARED_LIBRARY_CREATE_C_FLAGS -shared )
/usr/share/cmake-3.16/Modules/Compiler/GNU.cmake(37):  set(CMAKE_C_COMPILE_OPTIONS_SYSROOT --sysroot= )
/usr/share/cmake-3.16/Modules/Compiler/GNU.cmake(39):  set(CMAKE_C_LINKER_WRAPPER_FLAG -Wl, )
/usr/share/cmake-3.16/Modules/Compiler/GNU.cmake(40):  set(CMAKE_C_LINKER_WRAPPER_FLAG_SEP , )
/usr/share/cmake-3.16/Modules/Compiler/GNU.cmake(46):  get_property(_IN_TC GLOBAL PROPERTY IN_TRY_COMPILE )
/usr/share/cmake-3.16/Modules/Compiler/GNU.cmake(47):  if(NOT _IN_TC OR CMAKE_FORCE_DEPFILES )
/usr/share/cmake-3.16/Modules/Compiler/GNU.cmake(51):  set(CMAKE_DEPFILE_FLAGS_C -MD -MT <OBJECT> -MF <DEPFILE> )
/usr/share/cmake-3.16/Modules/Compiler/GNU.cmake(55):  string(APPEND CMAKE_C_FLAGS_INIT   )
/usr/share/cmake-3.16/Modules/Compiler/GNU.cmake(56):  string(APPEND CMAKE_C_FLAGS_DEBUG_INIT  -g )
/usr/share/cmake-3.16/Modules/Compiler/GNU.cmake(57):  string(APPEND CMAKE_C_FLAGS_MINSIZEREL_INIT  -Os -DNDEBUG )
/usr/share/cmake-3.16/Modules/Compiler/GNU.cmake(58):  string(APPEND CMAKE_C_FLAGS_RELEASE_INIT  -O3 -DNDEBUG )
/usr/share/cmake-3.16/Modules/Compiler/GNU.cmake(59):  string(APPEND CMAKE_C_FLAGS_RELWITHDEBINFO_INIT  -O2 -g -DNDEBUG )
/usr/share/cmake-3.16/Modules/Compiler/GNU.cmake(60):  set(CMAKE_C_CREATE_PREPROCESSED_SOURCE <CMAKE_C_COMPILER> <DEFINES> <INCLUDES> <FLAGS> -E <SOURCE> > <PREPROCESSED_SOURCE> )
/usr/share/cmake-3.16/Modules/Compiler/GNU.cmake(61):  set(CMAKE_C_CREATE_ASSEMBLY_SOURCE <CMAKE_C_COMPILER> <DEFINES> <INCLUDES> <FLAGS> -S <SOURCE> -o <ASSEMBLY_SOURCE> )
/usr/share/cmake-3.16/Modules/Compiler/GNU.cmake(62):  if(NOT APPLE OR NOT CMAKE_C_COMPILER_VERSION VERSION_LESS 4 )
/usr/share/cmake-3.16/Modules/Compiler/GNU.cmake(63):  set(CMAKE_INCLUDE_SYSTEM_FLAG_C -isystem  )
/usr/share/cmake-3.16/Modules/Compiler/GNU.cmake(66):  set(_CMAKE_C_IPO_SUPPORTED_BY_CMAKE YES )
/usr/share/cmake-3.16/Modules/Compiler/GNU.cmake(67):  set(_CMAKE_C_IPO_MAY_BE_SUPPORTED_BY_COMPILER NO )
/usr/share/cmake-3.16/Modules/Compiler/GNU.cmake(72):  if(NOT CMAKE_C_COMPILER_VERSION VERSION_LESS 4.5 )
/usr/share/cmake-3.16/Modules/Compiler/GNU.cmake(73):  set(_CMAKE_C_IPO_MAY_BE_SUPPORTED_BY_COMPILER YES )
/usr/share/cmake-3.16/Modules/Compiler/GNU.cmake(74):  set(__lto_flags -flto )
/usr/share/cmake-3.16/Modules/Compiler/GNU.cmake(76):  if(NOT CMAKE_C_COMPILER_VERSION VERSION_LESS 4.7 )
/usr/share/cmake-3.16/Modules/Compiler/GNU.cmake(80):  list(APPEND __lto_flags -fno-fat-lto-objects )
/usr/share/cmake-3.16/Modules/Compiler/GNU.cmake(83):  set(CMAKE_C_COMPILE_OPTIONS_IPO -flto;-fno-fat-lto-objects )
/usr/share/cmake-3.16/Modules/Compiler/GNU.cmake(92):  set(CMAKE_C_ARCHIVE_CREATE_IPO "" cr <TARGET> <LINK_FLAGS> <OBJECTS> )
/usr/share/cmake-3.16/Modules/Compiler/GNU.cmake(96):  set(CMAKE_C_ARCHIVE_APPEND_IPO "" r <TARGET> <LINK_FLAGS> <OBJECTS> )
/usr/share/cmake-3.16/Modules/Compiler/GNU.cmake(100):  set(CMAKE_C_ARCHIVE_FINISH_IPO "" <TARGET> )
/usr/share/cmake-3.16/Modules/Compiler/GNU.cmake(105):  set(CMAKE_C_COMPILER_PREDEFINES_COMMAND /usr/bin/cc )
/usr/share/cmake-3.16/Modules/Compiler/GNU.cmake(106):  if(CMAKE_C_COMPILER_ARG1 )
/usr/share/cmake-3.16/Modules/Compiler/GNU.cmake(111):  list(APPEND CMAKE_C_COMPILER_PREDEFINES_COMMAND -dM -E -c /usr/share/cmake-3.16/Modules/CMakeCXXCompilerABI.cpp )
/usr/share/cmake-3.16/Modules/Compiler/GNU.cmake(113):  set(CMAKE_PCH_EXTENSION .gch )
/usr/share/cmake-3.16/Modules/Compiler/GNU.cmake(114):  if(NOT CMAKE_GENERATOR MATCHES Xcode )
/usr/share/cmake-3.16/Modules/Compiler/GNU.cmake(115):  set(CMAKE_PCH_PROLOGUE #pragma GCC system_header )
/usr/share/cmake-3.16/Modules/Compiler/GNU.cmake(117):  set(CMAKE_C_COMPILE_OPTIONS_USE_PCH -Winvalid-pch -include <PCH_HEADER> )
/usr/share/cmake-3.16/Modules/Compiler/GNU.cmake(118):  set(CMAKE_C_COMPILE_OPTIONS_CREATE_PCH -Winvalid-pch -x c-header -include <PCH_HEADER> )
/usr/share/cmake-3.16/Modules/Compiler/GNU-C.cmake(4):  if(NOT CMAKE_C_COMPILER_VERSION VERSION_LESS 4.5 )
/usr/share/cmake-3.16/Modules/Compiler/GNU-C.cmake(5):  set(CMAKE_C90_STANDARD_COMPILE_OPTION -std=c90 )
/usr/share/cmake-3.16/Modules/Compiler/GNU-C.cmake(6):  set(CMAKE_C90_EXTENSION_COMPILE_OPTION -std=gnu90 )
/usr/share/cmake-3.16/Modules/Compiler/GNU-C.cmake(12):  if(NOT CMAKE_C_COMPILER_VERSION VERSION_LESS 3.4 )
/usr/share/cmake-3.16/Modules/Compiler/GNU-C.cmake(13):  set(CMAKE_C90_STANDARD__HAS_FULL_SUPPORT ON )
/usr/share/cmake-3.16/Modules/Compiler/GNU-C.cmake(14):  set(CMAKE_C99_STANDARD_COMPILE_OPTION -std=c99 )
/usr/share/cmake-3.16/Modules/Compiler/GNU-C.cmake(15):  set(CMAKE_C99_EXTENSION_COMPILE_OPTION -std=gnu99 )
/usr/share/cmake-3.16/Modules/Compiler/GNU-C.cmake(16):  set(CMAKE_C99_STANDARD__HAS_FULL_SUPPORT ON )
/usr/share/cmake-3.16/Modules/Compiler/GNU-C.cmake(19):  if(NOT CMAKE_C_COMPILER_VERSION VERSION_LESS 4.7 )
/usr/share/cmake-3.16/Modules/Compiler/GNU-C.cmake(20):  set(CMAKE_C11_STANDARD_COMPILE_OPTION -std=c11 )
/usr/share/cmake-3.16/Modules/Compiler/GNU-C.cmake(21):  set(CMAKE_C11_EXTENSION_COMPILE_OPTION -std=gnu11 )
/usr/share/cmake-3.16/Modules/Compiler/GNU-C.cmake(22):  set(CMAKE_C11_STANDARD__HAS_FULL_SUPPORT ON )
/usr/share/cmake-3.16/Modules/Compiler/GNU-C.cmake(28):  __compiler_check_default_language_standard(C 3.4 90 5.0 11 )
/usr/share/cmake-3.16/Modules/Compiler/CMakeCommonCompilerMacros.cmake(33):  set(__std_ver_pairs 3.4;90;5.0;11 )
/usr/share/cmake-3.16/Modules/Compiler/CMakeCommonCompilerMacros.cmake(34):  string(REGEX REPLACE  *; *   __std_ver_pairs 3.4;90;5.0;11 )
/usr/share/cmake-3.16/Modules/Compiler/CMakeCommonCompilerMacros.cmake(35):  string(REGEX MATCHALL [^ ]+ [^ ]+ __std_ver_pairs 3.4 90 5.0 11 )
/usr/share/cmake-3.16/Modules/Compiler/CMakeCommonCompilerMacros.cmake(39):  if(CMAKE_C_COMPILER_VERSION VERSION_GREATER_EQUAL 3.4 )
/usr/share/cmake-3.16/Modules/Compiler/CMakeCommonCompilerMacros.cmake(40):  if(NOT CMAKE_C_COMPILER_FORCED )
/usr/share/cmake-3.16/Modules/Compiler/CMakeCommonCompilerMacros.cmake(45):  else()
/usr/share/cmake-3.16/Modules/Compiler/CMakeCommonCompilerMacros.cmake(46):  list(REVERSE __std_ver_pairs )
/usr/share/cmake-3.16/Modules/Compiler/CMakeCommonCompilerMacros.cmake(47):  foreach(__std_ver_pair IN LISTS __std_ver_pairs )
/usr/share/cmake-3.16/Modules/Compiler/CMakeCommonCompilerMacros.cmake(48):  string(REGEX MATCH ([^ ]+) (.+) __std_ver_pair 5.0 11 )
/usr/share/cmake-3.16/Modules/Compiler/CMakeCommonCompilerMacros.cmake(49):  set(__stdver 5.0 )
/usr/share/cmake-3.16/Modules/Compiler/CMakeCommonCompilerMacros.cmake(50):  set(__std 11 )
/usr/share/cmake-3.16/Modules/Compiler/CMakeCommonCompilerMacros.cmake(51):  if(CMAKE_C_COMPILER_VERSION VERSION_GREATER_EQUAL __stdver AND NOT DEFINED CMAKE_C_STANDARD_DEFAULT )
/usr/share/cmake-3.16/Modules/Compiler/CMakeCommonCompilerMacros.cmake(54):  set(CMAKE_C_STANDARD_DEFAULT 11 )
/usr/share/cmake-3.16/Modules/Compiler/CMakeCommonCompilerMacros.cmake(56):  unset(__std )
/usr/share/cmake-3.16/Modules/Compiler/CMakeCommonCompilerMacros.cmake(57):  unset(__stdver )
/usr/share/cmake-3.16/Modules/Compiler/CMakeCommonCompilerMacros.cmake(48):  string(REGEX MATCH ([^ ]+) (.+) __std_ver_pair 3.4 90 )
/usr/share/cmake-3.16/Modules/Compiler/CMakeCommonCompilerMacros.cmake(49):  set(__stdver 3.4 )
/usr/share/cmake-3.16/Modules/Compiler/CMakeCommonCompilerMacros.cmake(50):  set(__std 90 )
/usr/share/cmake-3.16/Modules/Compiler/CMakeCommonCompilerMacros.cmake(51):  if(CMAKE_C_COMPILER_VERSION VERSION_GREATER_EQUAL __stdver AND NOT DEFINED CMAKE_C_STANDARD_DEFAULT )
/usr/share/cmake-3.16/Modules/Compiler/CMakeCommonCompilerMacros.cmake(56):  unset(__std )
/usr/share/cmake-3.16/Modules/Compiler/CMakeCommonCompilerMacros.cmake(57):  unset(__stdver )
/usr/share/cmake-3.16/Modules/Compiler/CMakeCommonCompilerMacros.cmake(61):  unset(__std_ver_pairs )
/usr/share/cmake-3.16/Modules/CMakeCInformation.cmake(28):  set(CMAKE_BASE_NAME )
/usr/share/cmake-3.16/Modules/CMakeCInformation.cmake(29):  get_filename_component(CMAKE_BASE_NAME /usr/bin/cc NAME_WE )
/usr/share/cmake-3.16/Modules/CMakeCInformation.cmake(30):  if(CMAKE_COMPILER_IS_GNUCC )
/usr/share/cmake-3.16/Modules/CMakeCInformation.cmake(31):  set(CMAKE_BASE_NAME gcc )
/usr/share/cmake-3.16/Modules/CMakeCInformation.cmake(36):  if(CMAKE_SYSTEM_PROCESSOR )
/usr/share/cmake-3.16/Modules/CMakeCInformation.cmake(37):  if(CMAKE_C_COMPILER_ID )
/usr/share/cmake-3.16/Modules/CMakeCInformation.cmake(38):  include(Platform/Linux-GNU-C-x86_64 OPTIONAL RESULT_VARIABLE _INCLUDED_FILE )
/usr/share/cmake-3.16/Modules/CMakeCInformation.cmake(40):  if(NOT _INCLUDED_FILE )
/usr/share/cmake-3.16/Modules/CMakeCInformation.cmake(41):  include(Platform/Linux-gcc-x86_64 OPTIONAL )
/usr/share/cmake-3.16/Modules/CMakeCInformation.cmake(47):  if(CMAKE_C_COMPILER_ID )
/usr/share/cmake-3.16/Modules/CMakeCInformation.cmake(48):  include(Platform/Linux-GNU-C OPTIONAL RESULT_VARIABLE _INCLUDED_FILE )
/usr/share/cmake-3.16/Modules/Platform/Linux-GNU-C.cmake(1):  include(Platform/Linux-GNU )
/usr/share/cmake-3.16/Modules/Platform/Linux-GNU.cmake(6):  if(__LINUX_COMPILER_GNU )
/usr/share/cmake-3.16/Modules/Platform/Linux-GNU.cmake(9):  set(__LINUX_COMPILER_GNU 1 )
/usr/share/cmake-3.16/Modules/Platform/Linux-GNU.cmake(11):  macro(__linux_compiler_gnu lang )
/usr/share/cmake-3.16/Modules/Platform/Linux-GNU-C.cmake(2):  __linux_compiler_gnu(C )
/usr/share/cmake-3.16/Modules/Platform/Linux-GNU.cmake(14):  set(CMAKE_SHARED_LIBRARY_LINK_C_FLAGS -rdynamic )
/usr/share/cmake-3.16/Modules/CMakeCInformation.cmake(51):  if(NOT _INCLUDED_FILE )
/usr/share/cmake-3.16/Modules/CMakeCInformation.cmake(57):  if(CMAKE_C_COMPILER_WRAPPER )
/usr/share/cmake-3.16/Modules/CMakeCInformation.cmake(65):  if(NOT _INCLUDED_FILE )
/usr/share/cmake-3.16/Modules/CMakeCInformation.cmake(69):  if(CMAKE_C_SIZEOF_DATA_PTR )
/usr/share/cmake-3.16/Modules/CMakeCInformation.cmake(82):  if(CMAKE_USER_MAKE_RULES_OVERRIDE )
/usr/share/cmake-3.16/Modules/CMakeCInformation.cmake(88):  if(CMAKE_USER_MAKE_RULES_OVERRIDE_C )
/usr/share/cmake-3.16/Modules/CMakeCInformation.cmake(98):  if(NOT CMAKE_MODULE_EXISTS )
/usr/share/cmake-3.16/Modules/CMakeCInformation.cmake(99):  set(CMAKE_SHARED_MODULE_C_FLAGS -fPIC )
/usr/share/cmake-3.16/Modules/CMakeCInformation.cmake(100):  set(CMAKE_SHARED_MODULE_CREATE_C_FLAGS -shared )
/usr/share/cmake-3.16/Modules/CMakeCInformation.cmake(103):  set(CMAKE_C_FLAGS_INIT    )
/usr/share/cmake-3.16/Modules/CMakeCInformation.cmake(105):  cmake_initialize_per_config_variable(CMAKE_C_FLAGS Flags used by the C compiler )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(9):  string(STRIP    _INIT )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(10):  set(CMAKE_C_FLAGS  CACHE STRING Flags used by the C compiler during all build types. )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(12):  mark_as_advanced(CMAKE_C_FLAGS )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(14):  if(NOT CMAKE_NOT_USING_CONFIG_FLAGS )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(15):  set(_CONFIGS Debug Release MinSizeRel RelWithDebInfo )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(17):  get_property(_GENERATOR_IS_MULTI_CONFIG GLOBAL PROPERTY GENERATOR_IS_MULTI_CONFIG )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(18):  if(_GENERATOR_IS_MULTI_CONFIG )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(20):  else()
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(21):  if(NOT CMAKE_NO_BUILD_TYPE )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(22):  set(CMAKE_BUILD_TYPE  CACHE STRING Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel ... )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(25):  list(APPEND _CONFIGS  )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(28):  list(REMOVE_DUPLICATES _CONFIGS )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(29):  foreach(_BUILD_TYPE IN LISTS _CONFIGS )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT Debug STREQUAL  )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER Debug _BUILD_TYPE )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  -g _INIT )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_C_FLAGS_DEBUG -g CACHE STRING Flags used by the C compiler during DEBUG builds. )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_C_FLAGS_DEBUG )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT Release STREQUAL  )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER Release _BUILD_TYPE )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  -O3 -DNDEBUG _INIT )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_C_FLAGS_RELEASE -O3 -DNDEBUG CACHE STRING Flags used by the C compiler during RELEASE builds. )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_C_FLAGS_RELEASE )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT MinSizeRel STREQUAL  )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER MinSizeRel _BUILD_TYPE )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  -Os -DNDEBUG _INIT )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_C_FLAGS_MINSIZEREL -Os -DNDEBUG CACHE STRING Flags used by the C compiler during MINSIZEREL builds. )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_C_FLAGS_MINSIZEREL )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT RelWithDebInfo STREQUAL  )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER RelWithDebInfo _BUILD_TYPE )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  -O2 -g -DNDEBUG _INIT )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_C_FLAGS_RELWITHDEBINFO -O2 -g -DNDEBUG CACHE STRING Flags used by the C compiler during RELWITHDEBINFO builds. )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_C_FLAGS_RELWITHDEBINFO )
/usr/share/cmake-3.16/Modules/CMakeCInformation.cmake(107):  if(CMAKE_C_STANDARD_LIBRARIES_INIT )
/usr/share/cmake-3.16/Modules/CMakeCInformation.cmake(113):  include(CMakeCommonLanguageInclude )
/usr/share/cmake-3.16/Modules/CMakeCommonLanguageInclude.cmake(9):  string(APPEND CMAKE_EXE_LINKER_FLAGS_INIT   )
/usr/share/cmake-3.16/Modules/CMakeCommonLanguageInclude.cmake(10):  string(APPEND CMAKE_SHARED_LINKER_FLAGS_INIT   )
/usr/share/cmake-3.16/Modules/CMakeCommonLanguageInclude.cmake(11):  string(APPEND CMAKE_MODULE_LINKER_FLAGS_INIT   )
/usr/share/cmake-3.16/Modules/CMakeCommonLanguageInclude.cmake(13):  cmake_initialize_per_config_variable(CMAKE_EXE_LINKER_FLAGS Flags used by the linker )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(9):  string(STRIP   _INIT )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(10):  set(CMAKE_EXE_LINKER_FLAGS  CACHE STRING Flags used by the linker during all build types. )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(12):  mark_as_advanced(CMAKE_EXE_LINKER_FLAGS )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(14):  if(NOT CMAKE_NOT_USING_CONFIG_FLAGS )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(15):  set(_CONFIGS Debug Release MinSizeRel RelWithDebInfo )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(17):  get_property(_GENERATOR_IS_MULTI_CONFIG GLOBAL PROPERTY GENERATOR_IS_MULTI_CONFIG )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(18):  if(_GENERATOR_IS_MULTI_CONFIG )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(20):  else()
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(21):  if(NOT CMAKE_NO_BUILD_TYPE )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(22):  set(CMAKE_BUILD_TYPE  CACHE STRING Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel ... )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(25):  list(APPEND _CONFIGS  )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(28):  list(REMOVE_DUPLICATES _CONFIGS )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(29):  foreach(_BUILD_TYPE IN LISTS _CONFIGS )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT Debug STREQUAL  )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER Debug _BUILD_TYPE )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  _INIT )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_EXE_LINKER_FLAGS_DEBUG  CACHE STRING Flags used by the linker during DEBUG builds. )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_DEBUG )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT Release STREQUAL  )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER Release _BUILD_TYPE )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  _INIT )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_EXE_LINKER_FLAGS_RELEASE  CACHE STRING Flags used by the linker during RELEASE builds. )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELEASE )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT MinSizeRel STREQUAL  )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER MinSizeRel _BUILD_TYPE )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  _INIT )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL  CACHE STRING Flags used by the linker during MINSIZEREL builds. )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT RelWithDebInfo STREQUAL  )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER RelWithDebInfo _BUILD_TYPE )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  _INIT )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO  CACHE STRING Flags used by the linker during RELWITHDEBINFO builds. )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO )
/usr/share/cmake-3.16/Modules/CMakeCommonLanguageInclude.cmake(14):  cmake_initialize_per_config_variable(CMAKE_SHARED_LINKER_FLAGS Flags used by the linker during the creation of shared libraries )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(9):  string(STRIP   _INIT )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(10):  set(CMAKE_SHARED_LINKER_FLAGS  CACHE STRING Flags used by the linker during the creation of shared libraries during all build types. )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(12):  mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(14):  if(NOT CMAKE_NOT_USING_CONFIG_FLAGS )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(15):  set(_CONFIGS Debug Release MinSizeRel RelWithDebInfo )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(17):  get_property(_GENERATOR_IS_MULTI_CONFIG GLOBAL PROPERTY GENERATOR_IS_MULTI_CONFIG )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(18):  if(_GENERATOR_IS_MULTI_CONFIG )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(20):  else()
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(21):  if(NOT CMAKE_NO_BUILD_TYPE )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(22):  set(CMAKE_BUILD_TYPE  CACHE STRING Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel ... )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(25):  list(APPEND _CONFIGS  )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(28):  list(REMOVE_DUPLICATES _CONFIGS )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(29):  foreach(_BUILD_TYPE IN LISTS _CONFIGS )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT Debug STREQUAL  )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER Debug _BUILD_TYPE )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  _INIT )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_SHARED_LINKER_FLAGS_DEBUG  CACHE STRING Flags used by the linker during the creation of shared libraries during DEBUG builds. )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_DEBUG )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT Release STREQUAL  )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER Release _BUILD_TYPE )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  _INIT )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_SHARED_LINKER_FLAGS_RELEASE  CACHE STRING Flags used by the linker during the creation of shared libraries during RELEASE builds. )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELEASE )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT MinSizeRel STREQUAL  )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER MinSizeRel _BUILD_TYPE )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  _INIT )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL  CACHE STRING Flags used by the linker during the creation of shared libraries during MINSIZEREL builds. )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT RelWithDebInfo STREQUAL  )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER RelWithDebInfo _BUILD_TYPE )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  _INIT )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO  CACHE STRING Flags used by the linker during the creation of shared libraries during RELWITHDEBINFO builds. )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO )
/usr/share/cmake-3.16/Modules/CMakeCommonLanguageInclude.cmake(15):  cmake_initialize_per_config_variable(CMAKE_MODULE_LINKER_FLAGS Flags used by the linker during the creation of modules )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(9):  string(STRIP   _INIT )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(10):  set(CMAKE_MODULE_LINKER_FLAGS  CACHE STRING Flags used by the linker during the creation of modules during all build types. )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(12):  mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(14):  if(NOT CMAKE_NOT_USING_CONFIG_FLAGS )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(15):  set(_CONFIGS Debug Release MinSizeRel RelWithDebInfo )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(17):  get_property(_GENERATOR_IS_MULTI_CONFIG GLOBAL PROPERTY GENERATOR_IS_MULTI_CONFIG )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(18):  if(_GENERATOR_IS_MULTI_CONFIG )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(20):  else()
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(21):  if(NOT CMAKE_NO_BUILD_TYPE )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(22):  set(CMAKE_BUILD_TYPE  CACHE STRING Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel ... )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(25):  list(APPEND _CONFIGS  )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(28):  list(REMOVE_DUPLICATES _CONFIGS )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(29):  foreach(_BUILD_TYPE IN LISTS _CONFIGS )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT Debug STREQUAL  )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER Debug _BUILD_TYPE )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  _INIT )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_MODULE_LINKER_FLAGS_DEBUG  CACHE STRING Flags used by the linker during the creation of modules during DEBUG builds. )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_DEBUG )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT Release STREQUAL  )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER Release _BUILD_TYPE )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  _INIT )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_MODULE_LINKER_FLAGS_RELEASE  CACHE STRING Flags used by the linker during the creation of modules during RELEASE builds. )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELEASE )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT MinSizeRel STREQUAL  )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER MinSizeRel _BUILD_TYPE )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  _INIT )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL  CACHE STRING Flags used by the linker during the creation of modules during MINSIZEREL builds. )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT RelWithDebInfo STREQUAL  )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER RelWithDebInfo _BUILD_TYPE )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  _INIT )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO  CACHE STRING Flags used by the linker during the creation of modules during RELWITHDEBINFO builds. )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO )
/usr/share/cmake-3.16/Modules/CMakeCommonLanguageInclude.cmake(16):  cmake_initialize_per_config_variable(CMAKE_STATIC_LINKER_FLAGS Flags used by the linker during the creation of static libraries )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(9):  string(STRIP  _INIT )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(10):  set(CMAKE_STATIC_LINKER_FLAGS  CACHE STRING Flags used by the linker during the creation of static libraries during all build types. )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(12):  mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(14):  if(NOT CMAKE_NOT_USING_CONFIG_FLAGS )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(15):  set(_CONFIGS Debug Release MinSizeRel RelWithDebInfo )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(17):  get_property(_GENERATOR_IS_MULTI_CONFIG GLOBAL PROPERTY GENERATOR_IS_MULTI_CONFIG )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(18):  if(_GENERATOR_IS_MULTI_CONFIG )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(20):  else()
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(21):  if(NOT CMAKE_NO_BUILD_TYPE )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(22):  set(CMAKE_BUILD_TYPE  CACHE STRING Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel ... )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(25):  list(APPEND _CONFIGS  )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(28):  list(REMOVE_DUPLICATES _CONFIGS )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(29):  foreach(_BUILD_TYPE IN LISTS _CONFIGS )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT Debug STREQUAL  )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER Debug _BUILD_TYPE )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  _INIT )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_STATIC_LINKER_FLAGS_DEBUG  CACHE STRING Flags used by the linker during the creation of static libraries during DEBUG builds. )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_DEBUG )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT Release STREQUAL  )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER Release _BUILD_TYPE )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  _INIT )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_STATIC_LINKER_FLAGS_RELEASE  CACHE STRING Flags used by the linker during the creation of static libraries during RELEASE builds. )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELEASE )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT MinSizeRel STREQUAL  )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER MinSizeRel _BUILD_TYPE )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  _INIT )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL  CACHE STRING Flags used by the linker during the creation of static libraries during MINSIZEREL builds. )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT RelWithDebInfo STREQUAL  )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER RelWithDebInfo _BUILD_TYPE )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  _INIT )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO  CACHE STRING Flags used by the linker during the creation of static libraries during RELWITHDEBINFO builds. )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO )
/usr/share/cmake-3.16/Modules/CMakeCommonLanguageInclude.cmake(19):  set(CMAKE_BUILD_TOOL /usr/bin/make )
/usr/share/cmake-3.16/Modules/CMakeCommonLanguageInclude.cmake(21):  mark_as_advanced(CMAKE_VERBOSE_MAKEFILE )
/usr/share/cmake-3.16/Modules/CMakeCInformation.cmake(143):  if(NOT CMAKE_C_CREATE_SHARED_LIBRARY )
/usr/share/cmake-3.16/Modules/CMakeCInformation.cmake(144):  set(CMAKE_C_CREATE_SHARED_LIBRARY <CMAKE_C_COMPILER> <CMAKE_SHARED_LIBRARY_C_FLAGS> <LANGUAGE_COMPILE_FLAGS> <LINK_FLAGS> <CMAKE_SHARED_LIBRARY_CREATE_C_FLAGS> <SONAME_FLAG><TARGET_SONAME> -o <TARGET> <OBJECTS> <LINK_LIBRARIES> )
/usr/share/cmake-3.16/Modules/CMakeCInformation.cmake(149):  if(NOT CMAKE_C_CREATE_SHARED_MODULE )
/usr/share/cmake-3.16/Modules/CMakeCInformation.cmake(150):  set(CMAKE_C_CREATE_SHARED_MODULE <CMAKE_C_COMPILER> <CMAKE_SHARED_LIBRARY_C_FLAGS> <LANGUAGE_COMPILE_FLAGS> <LINK_FLAGS> <CMAKE_SHARED_LIBRARY_CREATE_C_FLAGS> <SONAME_FLAG><TARGET_SONAME> -o <TARGET> <OBJECTS> <LINK_LIBRARIES> )
/usr/share/cmake-3.16/Modules/CMakeCInformation.cmake(155):  if(NOT DEFINED CMAKE_C_ARCHIVE_CREATE )
/usr/share/cmake-3.16/Modules/CMakeCInformation.cmake(156):  set(CMAKE_C_ARCHIVE_CREATE <CMAKE_AR> qc <TARGET> <LINK_FLAGS> <OBJECTS> )
/usr/share/cmake-3.16/Modules/CMakeCInformation.cmake(158):  if(NOT DEFINED CMAKE_C_ARCHIVE_APPEND )
/usr/share/cmake-3.16/Modules/CMakeCInformation.cmake(159):  set(CMAKE_C_ARCHIVE_APPEND <CMAKE_AR> q  <TARGET> <LINK_FLAGS> <OBJECTS> )
/usr/share/cmake-3.16/Modules/CMakeCInformation.cmake(161):  if(NOT DEFINED CMAKE_C_ARCHIVE_FINISH )
/usr/share/cmake-3.16/Modules/CMakeCInformation.cmake(162):  set(CMAKE_C_ARCHIVE_FINISH <CMAKE_RANLIB> <TARGET> )
/usr/share/cmake-3.16/Modules/CMakeCInformation.cmake(166):  if(NOT CMAKE_C_COMPILE_OBJECT )
/usr/share/cmake-3.16/Modules/CMakeCInformation.cmake(167):  set(CMAKE_C_COMPILE_OBJECT <CMAKE_C_COMPILER> <DEFINES> <INCLUDES> <FLAGS> -o <OBJECT>   -c <SOURCE> )
/usr/share/cmake-3.16/Modules/CMakeCInformation.cmake(171):  if(NOT CMAKE_C_LINK_EXECUTABLE )
/usr/share/cmake-3.16/Modules/CMakeCInformation.cmake(172):  set(CMAKE_C_LINK_EXECUTABLE <CMAKE_C_COMPILER> <FLAGS> <CMAKE_C_LINK_FLAGS> <LINK_FLAGS> <OBJECTS>  -o <TARGET> <LINK_LIBRARIES> )
/usr/share/cmake-3.16/Modules/CMakeCInformation.cmake(176):  if(NOT CMAKE_EXECUTABLE_RUNTIME_C_FLAG )
/usr/share/cmake-3.16/Modules/CMakeCInformation.cmake(177):  set(CMAKE_EXECUTABLE_RUNTIME_C_FLAG -Wl,-rpath, )
/usr/share/cmake-3.16/Modules/CMakeCInformation.cmake(180):  if(NOT CMAKE_EXECUTABLE_RUNTIME_C_FLAG_SEP )
/usr/share/cmake-3.16/Modules/CMakeCInformation.cmake(181):  set(CMAKE_EXECUTABLE_RUNTIME_C_FLAG_SEP : )
/usr/share/cmake-3.16/Modules/CMakeCInformation.cmake(184):  if(NOT CMAKE_EXECUTABLE_RPATH_LINK_C_FLAG )
/usr/share/cmake-3.16/Modules/CMakeCInformation.cmake(185):  set(CMAKE_EXECUTABLE_RPATH_LINK_C_FLAG -Wl,-rpath-link, )
/usr/share/cmake-3.16/Modules/CMakeCInformation.cmake(188):  set(CMAKE_C_INFORMATION_LOADED 1 )
/usr/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(11):  include(CMakeLanguageInformation )
/usr/share/cmake-3.16/Modules/CMakeLanguageInformation.cmake(9):  macro(__cmake_include_compiler_wrapper lang )
/usr/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(15):  if(UNIX )
/usr/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(16):  set(CMAKE_CXX_OUTPUT_EXTENSION .o )
/usr/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(21):  set(_INCLUDED_FILE 0 )
/usr/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(24):  if(CMAKE_CXX_COMPILER_ID )
/usr/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(25):  include(Compiler/GNU-CXX OPTIONAL )
/usr/share/cmake-3.16/Modules/Compiler/GNU-CXX.cmake(1):  include(Compiler/GNU )
/usr/share/cmake-3.16/Modules/Compiler/GNU.cmake(6):  if(__COMPILER_GNU )
/usr/share/cmake-3.16/Modules/Compiler/GNU.cmake(7):  return()
/usr/share/cmake-3.16/Modules/Compiler/GNU-CXX.cmake(2):  __compiler_gnu(CXX )
/usr/share/cmake-3.16/Modules/Compiler/GNU.cmake(21):  set(CMAKE_CXX_VERBOSE_FLAG -v )
/usr/share/cmake-3.16/Modules/Compiler/GNU.cmake(22):  set(CMAKE_CXX_COMPILE_OPTIONS_PIC -fPIC )
/usr/share/cmake-3.16/Modules/Compiler/GNU.cmake(23):  set(_CMAKE_CXX_PIE_MAY_BE_SUPPORTED_BY_LINKER NO )
/usr/share/cmake-3.16/Modules/Compiler/GNU.cmake(24):  if(NOT CMAKE_CXX_COMPILER_VERSION VERSION_LESS 3.4 )
/usr/share/cmake-3.16/Modules/Compiler/GNU.cmake(25):  set(CMAKE_CXX_COMPILE_OPTIONS_PIE -fPIE )
/usr/share/cmake-3.16/Modules/Compiler/GNU.cmake(28):  set(_CMAKE_CXX_PIE_MAY_BE_SUPPORTED_BY_LINKER YES )
/usr/share/cmake-3.16/Modules/Compiler/GNU.cmake(29):  set(CMAKE_CXX_LINK_OPTIONS_PIE -fPIE -pie )
/usr/share/cmake-3.16/Modules/Compiler/GNU.cmake(30):  set(CMAKE_CXX_LINK_OPTIONS_NO_PIE -no-pie )
/usr/share/cmake-3.16/Modules/Compiler/GNU.cmake(32):  if(NOT CMAKE_CXX_COMPILER_VERSION VERSION_LESS 4.0 )
/usr/share/cmake-3.16/Modules/Compiler/GNU.cmake(33):  set(CMAKE_CXX_COMPILE_OPTIONS_VISIBILITY -fvisibility= )
/usr/share/cmake-3.16/Modules/Compiler/GNU.cmake(35):  set(CMAKE_SHARED_LIBRARY_CXX_FLAGS -fPIC )
/usr/share/cmake-3.16/Modules/Compiler/GNU.cmake(36):  set(CMAKE_SHARED_LIBRARY_CREATE_CXX_FLAGS -shared )
/usr/share/cmake-3.16/Modules/Compiler/GNU.cmake(37):  set(CMAKE_CXX_COMPILE_OPTIONS_SYSROOT --sysroot= )
/usr/share/cmake-3.16/Modules/Compiler/GNU.cmake(39):  set(CMAKE_CXX_LINKER_WRAPPER_FLAG -Wl, )
/usr/share/cmake-3.16/Modules/Compiler/GNU.cmake(40):  set(CMAKE_CXX_LINKER_WRAPPER_FLAG_SEP , )
/usr/share/cmake-3.16/Modules/Compiler/GNU.cmake(46):  get_property(_IN_TC GLOBAL PROPERTY IN_TRY_COMPILE )
/usr/share/cmake-3.16/Modules/Compiler/GNU.cmake(47):  if(NOT _IN_TC OR CMAKE_FORCE_DEPFILES )
/usr/share/cmake-3.16/Modules/Compiler/GNU.cmake(51):  set(CMAKE_DEPFILE_FLAGS_CXX -MD -MT <OBJECT> -MF <DEPFILE> )
/usr/share/cmake-3.16/Modules/Compiler/GNU.cmake(55):  string(APPEND CMAKE_CXX_FLAGS_INIT   )
/usr/share/cmake-3.16/Modules/Compiler/GNU.cmake(56):  string(APPEND CMAKE_CXX_FLAGS_DEBUG_INIT  -g )
/usr/share/cmake-3.16/Modules/Compiler/GNU.cmake(57):  string(APPEND CMAKE_CXX_FLAGS_MINSIZEREL_INIT  -Os -DNDEBUG )
/usr/share/cmake-3.16/Modules/Compiler/GNU.cmake(58):  string(APPEND CMAKE_CXX_FLAGS_RELEASE_INIT  -O3 -DNDEBUG )
/usr/share/cmake-3.16/Modules/Compiler/GNU.cmake(59):  string(APPEND CMAKE_CXX_FLAGS_RELWITHDEBINFO_INIT  -O2 -g -DNDEBUG )
/usr/share/cmake-3.16/Modules/Compiler/GNU.cmake(60):  set(CMAKE_CXX_CREATE_PREPROCESSED_SOURCE <CMAKE_CXX_COMPILER> <DEFINES> <INCLUDES> <FLAGS> -E <SOURCE> > <PREPROCESSED_SOURCE> )
/usr/share/cmake-3.16/Modules/Compiler/GNU.cmake(61):  set(CMAKE_CXX_CREATE_ASSEMBLY_SOURCE <CMAKE_CXX_COMPILER> <DEFINES> <INCLUDES> <FLAGS> -S <SOURCE> -o <ASSEMBLY_SOURCE> )
/usr/share/cmake-3.16/Modules/Compiler/GNU.cmake(62):  if(NOT APPLE OR NOT CMAKE_CXX_COMPILER_VERSION VERSION_LESS 4 )
/usr/share/cmake-3.16/Modules/Compiler/GNU.cmake(63):  set(CMAKE_INCLUDE_SYSTEM_FLAG_CXX -isystem  )
/usr/share/cmake-3.16/Modules/Compiler/GNU.cmake(66):  set(_CMAKE_CXX_IPO_SUPPORTED_BY_CMAKE YES )
/usr/share/cmake-3.16/Modules/Compiler/GNU.cmake(67):  set(_CMAKE_CXX_IPO_MAY_BE_SUPPORTED_BY_COMPILER NO )
/usr/share/cmake-3.16/Modules/Compiler/GNU.cmake(72):  if(NOT CMAKE_CXX_COMPILER_VERSION VERSION_LESS 4.5 )
/usr/share/cmake-3.16/Modules/Compiler/GNU.cmake(73):  set(_CMAKE_CXX_IPO_MAY_BE_SUPPORTED_BY_COMPILER YES )
/usr/share/cmake-3.16/Modules/Compiler/GNU.cmake(74):  set(__lto_flags -flto )
/usr/share/cmake-3.16/Modules/Compiler/GNU.cmake(76):  if(NOT CMAKE_CXX_COMPILER_VERSION VERSION_LESS 4.7 )
/usr/share/cmake-3.16/Modules/Compiler/GNU.cmake(80):  list(APPEND __lto_flags -fno-fat-lto-objects )
/usr/share/cmake-3.16/Modules/Compiler/GNU.cmake(83):  set(CMAKE_CXX_COMPILE_OPTIONS_IPO -flto;-fno-fat-lto-objects )
/usr/share/cmake-3.16/Modules/Compiler/GNU.cmake(92):  set(CMAKE_CXX_ARCHIVE_CREATE_IPO "" cr <TARGET> <LINK_FLAGS> <OBJECTS> )
/usr/share/cmake-3.16/Modules/Compiler/GNU.cmake(96):  set(CMAKE_CXX_ARCHIVE_APPEND_IPO "" r <TARGET> <LINK_FLAGS> <OBJECTS> )
/usr/share/cmake-3.16/Modules/Compiler/GNU.cmake(100):  set(CMAKE_CXX_ARCHIVE_FINISH_IPO "" <TARGET> )
/usr/share/cmake-3.16/Modules/Compiler/GNU.cmake(105):  set(CMAKE_CXX_COMPILER_PREDEFINES_COMMAND /usr/bin/c++ )
/usr/share/cmake-3.16/Modules/Compiler/GNU.cmake(106):  if(CMAKE_CXX_COMPILER_ARG1 )
/usr/share/cmake-3.16/Modules/Compiler/GNU.cmake(111):  list(APPEND CMAKE_CXX_COMPILER_PREDEFINES_COMMAND -dM -E -c /usr/share/cmake-3.16/Modules/CMakeCXXCompilerABI.cpp )
/usr/share/cmake-3.16/Modules/Compiler/GNU.cmake(113):  set(CMAKE_PCH_EXTENSION .gch )
/usr/share/cmake-3.16/Modules/Compiler/GNU.cmake(114):  if(NOT CMAKE_GENERATOR MATCHES Xcode )
/usr/share/cmake-3.16/Modules/Compiler/GNU.cmake(115):  set(CMAKE_PCH_PROLOGUE #pragma GCC system_header )
/usr/share/cmake-3.16/Modules/Compiler/GNU.cmake(117):  set(CMAKE_CXX_COMPILE_OPTIONS_USE_PCH -Winvalid-pch -include <PCH_HEADER> )
/usr/share/cmake-3.16/Modules/Compiler/GNU.cmake(118):  set(CMAKE_CXX_COMPILE_OPTIONS_CREATE_PCH -Winvalid-pch -x c++-header -include <PCH_HEADER> )
/usr/share/cmake-3.16/Modules/Compiler/GNU-CXX.cmake(4):  if(WIN32 )
/usr/share/cmake-3.16/Modules/Compiler/GNU-CXX.cmake(8):  else()
/usr/share/cmake-3.16/Modules/Compiler/GNU-CXX.cmake(9):  if(NOT CMAKE_CXX_COMPILER_VERSION VERSION_LESS 4.0 )
/usr/share/cmake-3.16/Modules/Compiler/GNU-CXX.cmake(10):  set(CMAKE_CXX_COMPILE_OPTIONS_VISIBILITY_INLINES_HIDDEN -fvisibility-inlines-hidden )
/usr/share/cmake-3.16/Modules/Compiler/GNU-CXX.cmake(14):  if(NOT CMAKE_CXX_COMPILER_VERSION VERSION_LESS 3.4 )
/usr/share/cmake-3.16/Modules/Compiler/GNU-CXX.cmake(15):  set(CMAKE_CXX98_STANDARD_COMPILE_OPTION -std=c++98 )
/usr/share/cmake-3.16/Modules/Compiler/GNU-CXX.cmake(16):  set(CMAKE_CXX98_EXTENSION_COMPILE_OPTION -std=gnu++98 )
/usr/share/cmake-3.16/Modules/Compiler/GNU-CXX.cmake(19):  if(NOT CMAKE_CXX_COMPILER_VERSION VERSION_LESS 4.7 )
/usr/share/cmake-3.16/Modules/Compiler/GNU-CXX.cmake(20):  set(CMAKE_CXX98_STANDARD__HAS_FULL_SUPPORT ON )
/usr/share/cmake-3.16/Modules/Compiler/GNU-CXX.cmake(21):  set(CMAKE_CXX11_STANDARD_COMPILE_OPTION -std=c++11 )
/usr/share/cmake-3.16/Modules/Compiler/GNU-CXX.cmake(22):  set(CMAKE_CXX11_EXTENSION_COMPILE_OPTION -std=gnu++11 )
/usr/share/cmake-3.16/Modules/Compiler/GNU-CXX.cmake(29):  if(NOT CMAKE_CXX_COMPILER_VERSION VERSION_LESS 4.8.1 )
/usr/share/cmake-3.16/Modules/Compiler/GNU-CXX.cmake(30):  set(CMAKE_CXX11_STANDARD__HAS_FULL_SUPPORT ON )
/usr/share/cmake-3.16/Modules/Compiler/GNU-CXX.cmake(33):  if(NOT CMAKE_CXX_COMPILER_VERSION VERSION_LESS 4.9 )
/usr/share/cmake-3.16/Modules/Compiler/GNU-CXX.cmake(34):  set(CMAKE_CXX14_STANDARD_COMPILE_OPTION -std=c++14 )
/usr/share/cmake-3.16/Modules/Compiler/GNU-CXX.cmake(35):  set(CMAKE_CXX14_EXTENSION_COMPILE_OPTION -std=gnu++14 )
/usr/share/cmake-3.16/Modules/Compiler/GNU-CXX.cmake(41):  if(NOT CMAKE_CXX_COMPILER_VERSION VERSION_LESS 5.0 )
/usr/share/cmake-3.16/Modules/Compiler/GNU-CXX.cmake(42):  set(CMAKE_CXX14_STANDARD__HAS_FULL_SUPPORT ON )
/usr/share/cmake-3.16/Modules/Compiler/GNU-CXX.cmake(45):  if(NOT CMAKE_CXX_COMPILER_VERSION VERSION_LESS 8.0 )
/usr/share/cmake-3.16/Modules/Compiler/GNU-CXX.cmake(46):  set(CMAKE_CXX17_STANDARD_COMPILE_OPTION -std=c++17 )
/usr/share/cmake-3.16/Modules/Compiler/GNU-CXX.cmake(47):  set(CMAKE_CXX17_EXTENSION_COMPILE_OPTION -std=gnu++17 )
/usr/share/cmake-3.16/Modules/Compiler/GNU-CXX.cmake(53):  if(NOT CMAKE_CXX_COMPILER_VERSION VERSION_LESS 8.0 )
/usr/share/cmake-3.16/Modules/Compiler/GNU-CXX.cmake(54):  set(CMAKE_CXX20_STANDARD_COMPILE_OPTION -std=c++2a )
/usr/share/cmake-3.16/Modules/Compiler/GNU-CXX.cmake(55):  set(CMAKE_CXX20_EXTENSION_COMPILE_OPTION -std=gnu++2a )
/usr/share/cmake-3.16/Modules/Compiler/GNU-CXX.cmake(58):  __compiler_check_default_language_standard(CXX 3.4 98 6.0 14 )
/usr/share/cmake-3.16/Modules/Compiler/CMakeCommonCompilerMacros.cmake(33):  set(__std_ver_pairs 3.4;98;6.0;14 )
/usr/share/cmake-3.16/Modules/Compiler/CMakeCommonCompilerMacros.cmake(34):  string(REGEX REPLACE  *; *   __std_ver_pairs 3.4;98;6.0;14 )
/usr/share/cmake-3.16/Modules/Compiler/CMakeCommonCompilerMacros.cmake(35):  string(REGEX MATCHALL [^ ]+ [^ ]+ __std_ver_pairs 3.4 98 6.0 14 )
/usr/share/cmake-3.16/Modules/Compiler/CMakeCommonCompilerMacros.cmake(39):  if(CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL 3.4 )
/usr/share/cmake-3.16/Modules/Compiler/CMakeCommonCompilerMacros.cmake(40):  if(NOT CMAKE_CXX_COMPILER_FORCED )
/usr/share/cmake-3.16/Modules/Compiler/CMakeCommonCompilerMacros.cmake(45):  else()
/usr/share/cmake-3.16/Modules/Compiler/CMakeCommonCompilerMacros.cmake(46):  list(REVERSE __std_ver_pairs )
/usr/share/cmake-3.16/Modules/Compiler/CMakeCommonCompilerMacros.cmake(47):  foreach(__std_ver_pair IN LISTS __std_ver_pairs )
/usr/share/cmake-3.16/Modules/Compiler/CMakeCommonCompilerMacros.cmake(48):  string(REGEX MATCH ([^ ]+) (.+) __std_ver_pair 6.0 14 )
/usr/share/cmake-3.16/Modules/Compiler/CMakeCommonCompilerMacros.cmake(49):  set(__stdver 6.0 )
/usr/share/cmake-3.16/Modules/Compiler/CMakeCommonCompilerMacros.cmake(50):  set(__std 14 )
/usr/share/cmake-3.16/Modules/Compiler/CMakeCommonCompilerMacros.cmake(51):  if(CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL __stdver AND NOT DEFINED CMAKE_CXX_STANDARD_DEFAULT )
/usr/share/cmake-3.16/Modules/Compiler/CMakeCommonCompilerMacros.cmake(54):  set(CMAKE_CXX_STANDARD_DEFAULT 14 )
/usr/share/cmake-3.16/Modules/Compiler/CMakeCommonCompilerMacros.cmake(56):  unset(__std )
/usr/share/cmake-3.16/Modules/Compiler/CMakeCommonCompilerMacros.cmake(57):  unset(__stdver )
/usr/share/cmake-3.16/Modules/Compiler/CMakeCommonCompilerMacros.cmake(48):  string(REGEX MATCH ([^ ]+) (.+) __std_ver_pair 3.4 98 )
/usr/share/cmake-3.16/Modules/Compiler/CMakeCommonCompilerMacros.cmake(49):  set(__stdver 3.4 )
/usr/share/cmake-3.16/Modules/Compiler/CMakeCommonCompilerMacros.cmake(50):  set(__std 98 )
/usr/share/cmake-3.16/Modules/Compiler/CMakeCommonCompilerMacros.cmake(51):  if(CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL __stdver AND NOT DEFINED CMAKE_CXX_STANDARD_DEFAULT )
/usr/share/cmake-3.16/Modules/Compiler/CMakeCommonCompilerMacros.cmake(56):  unset(__std )
/usr/share/cmake-3.16/Modules/Compiler/CMakeCommonCompilerMacros.cmake(57):  unset(__stdver )
/usr/share/cmake-3.16/Modules/Compiler/CMakeCommonCompilerMacros.cmake(61):  unset(__std_ver_pairs )
/usr/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(28):  set(CMAKE_BASE_NAME )
/usr/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(29):  get_filename_component(CMAKE_BASE_NAME /usr/bin/c++ NAME_WE )
/usr/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(31):  if(CMAKE_COMPILER_IS_GNUCXX )
/usr/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(32):  set(CMAKE_BASE_NAME g++ )
/usr/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(37):  if(CMAKE_SYSTEM_PROCESSOR )
/usr/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(38):  if(CMAKE_CXX_COMPILER_ID )
/usr/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(39):  include(Platform/Linux-GNU-CXX-x86_64 OPTIONAL RESULT_VARIABLE _INCLUDED_FILE )
/usr/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(41):  if(NOT _INCLUDED_FILE )
/usr/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(42):  include(Platform/Linux-g++-x86_64 OPTIONAL )
/usr/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(47):  if(CMAKE_CXX_COMPILER_ID )
/usr/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(48):  include(Platform/Linux-GNU-CXX OPTIONAL RESULT_VARIABLE _INCLUDED_FILE )
/usr/share/cmake-3.16/Modules/Platform/Linux-GNU-CXX.cmake(1):  include(Platform/Linux-GNU )
/usr/share/cmake-3.16/Modules/Platform/Linux-GNU.cmake(6):  if(__LINUX_COMPILER_GNU )
/usr/share/cmake-3.16/Modules/Platform/Linux-GNU.cmake(7):  return()
/usr/share/cmake-3.16/Modules/Platform/Linux-GNU-CXX.cmake(2):  __linux_compiler_gnu(CXX )
/usr/share/cmake-3.16/Modules/Platform/Linux-GNU.cmake(14):  set(CMAKE_SHARED_LIBRARY_LINK_CXX_FLAGS -rdynamic )
/usr/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(50):  if(NOT _INCLUDED_FILE )
/usr/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(56):  if(CMAKE_CXX_COMPILER_WRAPPER )
/usr/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(64):  if(NOT _INCLUDED_FILE )
/usr/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(68):  if(CMAKE_CXX_SIZEOF_DATA_PTR )
/usr/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(81):  if(CMAKE_USER_MAKE_RULES_OVERRIDE )
/usr/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(87):  if(CMAKE_USER_MAKE_RULES_OVERRIDE_CXX )
/usr/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(97):  if(NOT CMAKE_SHARED_LIBRARY_CREATE_CXX_FLAGS )
/usr/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(101):  if(NOT CMAKE_CXX_COMPILE_OPTIONS_PIC )
/usr/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(105):  if(NOT CMAKE_CXX_COMPILE_OPTIONS_PIE )
/usr/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(108):  if(NOT CMAKE_CXX_LINK_OPTIONS_PIE )
/usr/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(111):  if(NOT CMAKE_CXX_LINK_OPTIONS_NO_PIE )
/usr/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(115):  if(NOT CMAKE_CXX_COMPILE_OPTIONS_DLL )
/usr/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(116):  set(CMAKE_CXX_COMPILE_OPTIONS_DLL  )
/usr/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(119):  if(NOT CMAKE_SHARED_LIBRARY_CXX_FLAGS )
/usr/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(123):  if(NOT DEFINED CMAKE_SHARED_LIBRARY_LINK_CXX_FLAGS )
/usr/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(127):  if(NOT CMAKE_SHARED_LIBRARY_RUNTIME_CXX_FLAG )
/usr/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(128):  set(CMAKE_SHARED_LIBRARY_RUNTIME_CXX_FLAG -Wl,-rpath, )
/usr/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(131):  if(NOT CMAKE_SHARED_LIBRARY_RUNTIME_CXX_FLAG_SEP )
/usr/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(132):  set(CMAKE_SHARED_LIBRARY_RUNTIME_CXX_FLAG_SEP : )
/usr/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(135):  if(NOT CMAKE_SHARED_LIBRARY_RPATH_LINK_CXX_FLAG )
/usr/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(136):  set(CMAKE_SHARED_LIBRARY_RPATH_LINK_CXX_FLAG -Wl,-rpath-link, )
/usr/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(139):  if(NOT DEFINED CMAKE_EXE_EXPORTS_CXX_FLAG )
/usr/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(140):  set(CMAKE_EXE_EXPORTS_CXX_FLAG -Wl,--export-dynamic )
/usr/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(143):  if(NOT DEFINED CMAKE_SHARED_LIBRARY_SONAME_CXX_FLAG )
/usr/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(144):  set(CMAKE_SHARED_LIBRARY_SONAME_CXX_FLAG -Wl,-soname, )
/usr/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(147):  if(NOT CMAKE_EXECUTABLE_RUNTIME_CXX_FLAG )
/usr/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(148):  set(CMAKE_EXECUTABLE_RUNTIME_CXX_FLAG -Wl,-rpath, )
/usr/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(151):  if(NOT CMAKE_EXECUTABLE_RUNTIME_CXX_FLAG_SEP )
/usr/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(152):  set(CMAKE_EXECUTABLE_RUNTIME_CXX_FLAG_SEP : )
/usr/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(155):  if(NOT CMAKE_EXECUTABLE_RPATH_LINK_CXX_FLAG )
/usr/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(156):  set(CMAKE_EXECUTABLE_RPATH_LINK_CXX_FLAG -Wl,-rpath-link, )
/usr/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(159):  if(NOT DEFINED CMAKE_SHARED_LIBRARY_LINK_CXX_WITH_RUNTIME_PATH )
/usr/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(160):  set(CMAKE_SHARED_LIBRARY_LINK_CXX_WITH_RUNTIME_PATH  )
/usr/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(163):  if(NOT CMAKE_INCLUDE_FLAG_CXX )
/usr/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(164):  set(CMAKE_INCLUDE_FLAG_CXX -I )
/usr/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(170):  if(NOT CMAKE_MODULE_EXISTS )
/usr/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(171):  set(CMAKE_SHARED_MODULE_CXX_FLAGS -fPIC )
/usr/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(172):  set(CMAKE_SHARED_MODULE_CREATE_CXX_FLAGS -shared )
/usr/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(176):  if(NOT CMAKE_SHARED_MODULE_CREATE_CXX_FLAGS )
/usr/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(180):  if(NOT CMAKE_SHARED_MODULE_CXX_FLAGS )
/usr/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(185):  foreach(type SHARED_LIBRARY SHARED_MODULE EXE )
/usr/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(186):  if(NOT CMAKE_SHARED_LIBRARY_LINK_STATIC_CXX_FLAGS )
/usr/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(187):  set(CMAKE_SHARED_LIBRARY_LINK_STATIC_CXX_FLAGS -Wl,-Bstatic )
/usr/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(190):  if(NOT CMAKE_SHARED_LIBRARY_LINK_DYNAMIC_CXX_FLAGS )
/usr/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(191):  set(CMAKE_SHARED_LIBRARY_LINK_DYNAMIC_CXX_FLAGS -Wl,-Bdynamic )
/usr/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(186):  if(NOT CMAKE_SHARED_MODULE_LINK_STATIC_CXX_FLAGS )
/usr/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(187):  set(CMAKE_SHARED_MODULE_LINK_STATIC_CXX_FLAGS -Wl,-Bstatic )
/usr/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(190):  if(NOT CMAKE_SHARED_MODULE_LINK_DYNAMIC_CXX_FLAGS )
/usr/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(191):  set(CMAKE_SHARED_MODULE_LINK_DYNAMIC_CXX_FLAGS -Wl,-Bdynamic )
/usr/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(186):  if(NOT CMAKE_EXE_LINK_STATIC_CXX_FLAGS )
/usr/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(187):  set(CMAKE_EXE_LINK_STATIC_CXX_FLAGS -Wl,-Bstatic )
/usr/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(190):  if(NOT CMAKE_EXE_LINK_DYNAMIC_CXX_FLAGS )
/usr/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(191):  set(CMAKE_EXE_LINK_DYNAMIC_CXX_FLAGS -Wl,-Bdynamic )
/usr/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(200):  set(CMAKE_CXX_FLAGS_INIT    )
/usr/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(202):  cmake_initialize_per_config_variable(CMAKE_CXX_FLAGS Flags used by the CXX compiler )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(9):  string(STRIP    _INIT )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(10):  set(CMAKE_CXX_FLAGS  CACHE STRING Flags used by the CXX compiler during all build types. )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(12):  mark_as_advanced(CMAKE_CXX_FLAGS )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(14):  if(NOT CMAKE_NOT_USING_CONFIG_FLAGS )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(15):  set(_CONFIGS Debug Release MinSizeRel RelWithDebInfo )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(17):  get_property(_GENERATOR_IS_MULTI_CONFIG GLOBAL PROPERTY GENERATOR_IS_MULTI_CONFIG )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(18):  if(_GENERATOR_IS_MULTI_CONFIG )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(20):  else()
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(21):  if(NOT CMAKE_NO_BUILD_TYPE )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(22):  set(CMAKE_BUILD_TYPE  CACHE STRING Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel ... )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(25):  list(APPEND _CONFIGS  )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(28):  list(REMOVE_DUPLICATES _CONFIGS )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(29):  foreach(_BUILD_TYPE IN LISTS _CONFIGS )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT Debug STREQUAL  )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER Debug _BUILD_TYPE )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  -g _INIT )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_CXX_FLAGS_DEBUG -g CACHE STRING Flags used by the CXX compiler during DEBUG builds. )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_CXX_FLAGS_DEBUG )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT Release STREQUAL  )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER Release _BUILD_TYPE )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  -O3 -DNDEBUG _INIT )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_CXX_FLAGS_RELEASE -O3 -DNDEBUG CACHE STRING Flags used by the CXX compiler during RELEASE builds. )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_CXX_FLAGS_RELEASE )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT MinSizeRel STREQUAL  )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER MinSizeRel _BUILD_TYPE )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  -Os -DNDEBUG _INIT )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_CXX_FLAGS_MINSIZEREL -Os -DNDEBUG CACHE STRING Flags used by the CXX compiler during MINSIZEREL builds. )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_CXX_FLAGS_MINSIZEREL )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT RelWithDebInfo STREQUAL  )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER RelWithDebInfo _BUILD_TYPE )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  -O2 -g -DNDEBUG _INIT )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_CXX_FLAGS_RELWITHDEBINFO -O2 -g -DNDEBUG CACHE STRING Flags used by the CXX compiler during RELWITHDEBINFO builds. )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_CXX_FLAGS_RELWITHDEBINFO )
/usr/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(204):  if(CMAKE_CXX_STANDARD_LIBRARIES_INIT )
/usr/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(210):  include(CMakeCommonLanguageInclude )
/usr/share/cmake-3.16/Modules/CMakeCommonLanguageInclude.cmake(9):  string(APPEND CMAKE_EXE_LINKER_FLAGS_INIT   )
/usr/share/cmake-3.16/Modules/CMakeCommonLanguageInclude.cmake(10):  string(APPEND CMAKE_SHARED_LINKER_FLAGS_INIT   )
/usr/share/cmake-3.16/Modules/CMakeCommonLanguageInclude.cmake(11):  string(APPEND CMAKE_MODULE_LINKER_FLAGS_INIT   )
/usr/share/cmake-3.16/Modules/CMakeCommonLanguageInclude.cmake(13):  cmake_initialize_per_config_variable(CMAKE_EXE_LINKER_FLAGS Flags used by the linker )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(9):  string(STRIP    _INIT )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(10):  set(CMAKE_EXE_LINKER_FLAGS  CACHE STRING Flags used by the linker during all build types. )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(12):  mark_as_advanced(CMAKE_EXE_LINKER_FLAGS )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(14):  if(NOT CMAKE_NOT_USING_CONFIG_FLAGS )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(15):  set(_CONFIGS Debug Release MinSizeRel RelWithDebInfo )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(17):  get_property(_GENERATOR_IS_MULTI_CONFIG GLOBAL PROPERTY GENERATOR_IS_MULTI_CONFIG )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(18):  if(_GENERATOR_IS_MULTI_CONFIG )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(20):  else()
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(21):  if(NOT CMAKE_NO_BUILD_TYPE )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(22):  set(CMAKE_BUILD_TYPE  CACHE STRING Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel ... )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(25):  list(APPEND _CONFIGS  )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(28):  list(REMOVE_DUPLICATES _CONFIGS )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(29):  foreach(_BUILD_TYPE IN LISTS _CONFIGS )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT Debug STREQUAL  )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER Debug _BUILD_TYPE )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  _INIT )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_EXE_LINKER_FLAGS_DEBUG  CACHE STRING Flags used by the linker during DEBUG builds. )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_DEBUG )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT Release STREQUAL  )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER Release _BUILD_TYPE )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  _INIT )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_EXE_LINKER_FLAGS_RELEASE  CACHE STRING Flags used by the linker during RELEASE builds. )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELEASE )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT MinSizeRel STREQUAL  )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER MinSizeRel _BUILD_TYPE )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  _INIT )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL  CACHE STRING Flags used by the linker during MINSIZEREL builds. )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT RelWithDebInfo STREQUAL  )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER RelWithDebInfo _BUILD_TYPE )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  _INIT )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO  CACHE STRING Flags used by the linker during RELWITHDEBINFO builds. )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO )
/usr/share/cmake-3.16/Modules/CMakeCommonLanguageInclude.cmake(14):  cmake_initialize_per_config_variable(CMAKE_SHARED_LINKER_FLAGS Flags used by the linker during the creation of shared libraries )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(9):  string(STRIP    _INIT )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(10):  set(CMAKE_SHARED_LINKER_FLAGS  CACHE STRING Flags used by the linker during the creation of shared libraries during all build types. )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(12):  mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(14):  if(NOT CMAKE_NOT_USING_CONFIG_FLAGS )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(15):  set(_CONFIGS Debug Release MinSizeRel RelWithDebInfo )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(17):  get_property(_GENERATOR_IS_MULTI_CONFIG GLOBAL PROPERTY GENERATOR_IS_MULTI_CONFIG )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(18):  if(_GENERATOR_IS_MULTI_CONFIG )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(20):  else()
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(21):  if(NOT CMAKE_NO_BUILD_TYPE )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(22):  set(CMAKE_BUILD_TYPE  CACHE STRING Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel ... )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(25):  list(APPEND _CONFIGS  )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(28):  list(REMOVE_DUPLICATES _CONFIGS )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(29):  foreach(_BUILD_TYPE IN LISTS _CONFIGS )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT Debug STREQUAL  )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER Debug _BUILD_TYPE )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  _INIT )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_SHARED_LINKER_FLAGS_DEBUG  CACHE STRING Flags used by the linker during the creation of shared libraries during DEBUG builds. )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_DEBUG )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT Release STREQUAL  )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER Release _BUILD_TYPE )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  _INIT )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_SHARED_LINKER_FLAGS_RELEASE  CACHE STRING Flags used by the linker during the creation of shared libraries during RELEASE builds. )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELEASE )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT MinSizeRel STREQUAL  )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER MinSizeRel _BUILD_TYPE )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  _INIT )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL  CACHE STRING Flags used by the linker during the creation of shared libraries during MINSIZEREL builds. )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT RelWithDebInfo STREQUAL  )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER RelWithDebInfo _BUILD_TYPE )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  _INIT )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO  CACHE STRING Flags used by the linker during the creation of shared libraries during RELWITHDEBINFO builds. )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO )
/usr/share/cmake-3.16/Modules/CMakeCommonLanguageInclude.cmake(15):  cmake_initialize_per_config_variable(CMAKE_MODULE_LINKER_FLAGS Flags used by the linker during the creation of modules )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(9):  string(STRIP    _INIT )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(10):  set(CMAKE_MODULE_LINKER_FLAGS  CACHE STRING Flags used by the linker during the creation of modules during all build types. )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(12):  mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(14):  if(NOT CMAKE_NOT_USING_CONFIG_FLAGS )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(15):  set(_CONFIGS Debug Release MinSizeRel RelWithDebInfo )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(17):  get_property(_GENERATOR_IS_MULTI_CONFIG GLOBAL PROPERTY GENERATOR_IS_MULTI_CONFIG )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(18):  if(_GENERATOR_IS_MULTI_CONFIG )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(20):  else()
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(21):  if(NOT CMAKE_NO_BUILD_TYPE )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(22):  set(CMAKE_BUILD_TYPE  CACHE STRING Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel ... )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(25):  list(APPEND _CONFIGS  )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(28):  list(REMOVE_DUPLICATES _CONFIGS )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(29):  foreach(_BUILD_TYPE IN LISTS _CONFIGS )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT Debug STREQUAL  )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER Debug _BUILD_TYPE )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  _INIT )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_MODULE_LINKER_FLAGS_DEBUG  CACHE STRING Flags used by the linker during the creation of modules during DEBUG builds. )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_DEBUG )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT Release STREQUAL  )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER Release _BUILD_TYPE )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  _INIT )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_MODULE_LINKER_FLAGS_RELEASE  CACHE STRING Flags used by the linker during the creation of modules during RELEASE builds. )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELEASE )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT MinSizeRel STREQUAL  )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER MinSizeRel _BUILD_TYPE )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  _INIT )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL  CACHE STRING Flags used by the linker during the creation of modules during MINSIZEREL builds. )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT RelWithDebInfo STREQUAL  )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER RelWithDebInfo _BUILD_TYPE )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  _INIT )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO  CACHE STRING Flags used by the linker during the creation of modules during RELWITHDEBINFO builds. )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO )
/usr/share/cmake-3.16/Modules/CMakeCommonLanguageInclude.cmake(16):  cmake_initialize_per_config_variable(CMAKE_STATIC_LINKER_FLAGS Flags used by the linker during the creation of static libraries )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(9):  string(STRIP  _INIT )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(10):  set(CMAKE_STATIC_LINKER_FLAGS  CACHE STRING Flags used by the linker during the creation of static libraries during all build types. )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(12):  mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(14):  if(NOT CMAKE_NOT_USING_CONFIG_FLAGS )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(15):  set(_CONFIGS Debug Release MinSizeRel RelWithDebInfo )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(17):  get_property(_GENERATOR_IS_MULTI_CONFIG GLOBAL PROPERTY GENERATOR_IS_MULTI_CONFIG )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(18):  if(_GENERATOR_IS_MULTI_CONFIG )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(20):  else()
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(21):  if(NOT CMAKE_NO_BUILD_TYPE )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(22):  set(CMAKE_BUILD_TYPE  CACHE STRING Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel ... )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(25):  list(APPEND _CONFIGS  )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(28):  list(REMOVE_DUPLICATES _CONFIGS )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(29):  foreach(_BUILD_TYPE IN LISTS _CONFIGS )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT Debug STREQUAL  )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER Debug _BUILD_TYPE )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  _INIT )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_STATIC_LINKER_FLAGS_DEBUG  CACHE STRING Flags used by the linker during the creation of static libraries during DEBUG builds. )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_DEBUG )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT Release STREQUAL  )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER Release _BUILD_TYPE )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  _INIT )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_STATIC_LINKER_FLAGS_RELEASE  CACHE STRING Flags used by the linker during the creation of static libraries during RELEASE builds. )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELEASE )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT MinSizeRel STREQUAL  )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER MinSizeRel _BUILD_TYPE )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  _INIT )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL  CACHE STRING Flags used by the linker during the creation of static libraries during MINSIZEREL builds. )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(30):  if(NOT RelWithDebInfo STREQUAL  )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(31):  string(TOUPPER RelWithDebInfo _BUILD_TYPE )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(32):  string(STRIP  _INIT )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(33):  set(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO  CACHE STRING Flags used by the linker during the creation of static libraries during RELWITHDEBINFO builds. )
/usr/share/cmake-3.16/Modules/CMakeInitializeConfigs.cmake(35):  mark_as_advanced(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO )
/usr/share/cmake-3.16/Modules/CMakeCommonLanguageInclude.cmake(19):  set(CMAKE_BUILD_TOOL /usr/bin/make )
/usr/share/cmake-3.16/Modules/CMakeCommonLanguageInclude.cmake(21):  mark_as_advanced(CMAKE_VERBOSE_MAKEFILE )
/usr/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(239):  if(NOT CMAKE_CXX_CREATE_SHARED_LIBRARY )
/usr/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(240):  set(CMAKE_CXX_CREATE_SHARED_LIBRARY <CMAKE_CXX_COMPILER> <CMAKE_SHARED_LIBRARY_CXX_FLAGS> <LANGUAGE_COMPILE_FLAGS> <LINK_FLAGS> <CMAKE_SHARED_LIBRARY_CREATE_CXX_FLAGS> <SONAME_FLAG><TARGET_SONAME> -o <TARGET> <OBJECTS> <LINK_LIBRARIES> )
/usr/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(245):  if(NOT CMAKE_CXX_CREATE_SHARED_MODULE )
/usr/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(246):  set(CMAKE_CXX_CREATE_SHARED_MODULE <CMAKE_CXX_COMPILER> <CMAKE_SHARED_LIBRARY_CXX_FLAGS> <LANGUAGE_COMPILE_FLAGS> <LINK_FLAGS> <CMAKE_SHARED_LIBRARY_CREATE_CXX_FLAGS> <SONAME_FLAG><TARGET_SONAME> -o <TARGET> <OBJECTS> <LINK_LIBRARIES> )
/usr/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(252):  if(NOT DEFINED CMAKE_CXX_ARCHIVE_CREATE )
/usr/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(253):  set(CMAKE_CXX_ARCHIVE_CREATE <CMAKE_AR> qc <TARGET> <LINK_FLAGS> <OBJECTS> )
/usr/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(255):  if(NOT DEFINED CMAKE_CXX_ARCHIVE_APPEND )
/usr/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(256):  set(CMAKE_CXX_ARCHIVE_APPEND <CMAKE_AR> q  <TARGET> <LINK_FLAGS> <OBJECTS> )
/usr/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(258):  if(NOT DEFINED CMAKE_CXX_ARCHIVE_FINISH )
/usr/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(259):  set(CMAKE_CXX_ARCHIVE_FINISH <CMAKE_RANLIB> <TARGET> )
/usr/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(263):  if(NOT CMAKE_CXX_COMPILE_OBJECT )
/usr/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(264):  set(CMAKE_CXX_COMPILE_OBJECT <CMAKE_CXX_COMPILER>  <DEFINES> <INCLUDES> <FLAGS> -o <OBJECT> -c <SOURCE> )
/usr/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(268):  if(NOT CMAKE_CXX_LINK_EXECUTABLE )
/usr/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(269):  set(CMAKE_CXX_LINK_EXECUTABLE <CMAKE_CXX_COMPILER>  <FLAGS> <CMAKE_CXX_LINK_FLAGS> <LINK_FLAGS> <OBJECTS>  -o <TARGET> <LINK_LIBRARIES> )
/usr/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(273):  mark_as_advanced(CMAKE_VERBOSE_MAKEFILE )
/usr/share/cmake-3.16/Modules/CMakeCXXInformation.cmake(277):  set(CMAKE_CXX_INFORMATION_LOADED 1 )
/home/wangshuai/femu-swang/build-femu/meson-private/cmake_libudev/CMakeLists.txt(4):  cmake_minimum_required(VERSION 3.16.3 )
/home/wangshuai/femu-swang/build-femu/meson-private/cmake_libudev/CMakeLists.txt(6):  set(TMP_PATHS_LIST )
/home/wangshuai/femu-swang/build-femu/meson-private/cmake_libudev/CMakeLists.txt(7):  list(APPEND TMP_PATHS_LIST  )
/home/wangshuai/femu-swang/build-femu/meson-private/cmake_libudev/CMakeLists.txt(8):  list(APPEND TMP_PATHS_LIST  )
/home/wangshuai/femu-swang/build-femu/meson-private/cmake_libudev/CMakeLists.txt(9):  list(APPEND TMP_PATHS_LIST  )
/home/wangshuai/femu-swang/build-femu/meson-private/cmake_libudev/CMakeLists.txt(10):  list(APPEND TMP_PATHS_LIST  )
/home/wangshuai/femu-swang/build-femu/meson-private/cmake_libudev/CMakeLists.txt(11):  list(APPEND TMP_PATHS_LIST  )
/home/wangshuai/femu-swang/build-femu/meson-private/cmake_libudev/CMakeLists.txt(12):  list(APPEND TMP_PATHS_LIST  )
/home/wangshuai/femu-swang/build-femu/meson-private/cmake_libudev/CMakeLists.txt(13):  list(APPEND TMP_PATHS_LIST /usr/local;/usr;/;/usr;/usr/local;/usr/X11R6;/usr/pkg;/opt )
/home/wangshuai/femu-swang/build-femu/meson-private/cmake_libudev/CMakeLists.txt(14):  list(APPEND TMP_PATHS_LIST  )
/home/wangshuai/femu-swang/build-femu/meson-private/cmake_libudev/CMakeLists.txt(15):  list(APPEND TMP_PATHS_LIST  )
/home/wangshuai/femu-swang/build-femu/meson-private/cmake_libudev/CMakeLists.txt(17):  set(LIB_ARCH_LIST )
/home/wangshuai/femu-swang/build-femu/meson-private/cmake_libudev/CMakeLists.txt(18):  if(CMAKE_LIBRARY_ARCHITECTURE_REGEX )
/home/wangshuai/femu-swang/build-femu/meson-private/cmake_libudev/CMakeLists.txt(19):  file(GLOB implicit_dirs RELATIVE /lib /lib/*-linux-gnu* )
/home/wangshuai/femu-swang/build-femu/meson-private/cmake_libudev/CMakeLists.txt(20):  foreach(dir i386-linux-gnu;x86_64-linux-gnu )
/home/wangshuai/femu-swang/build-femu/meson-private/cmake_libudev/CMakeLists.txt(21):  if(i386-linux-gnu MATCHES [a-z0-9_]+(-[a-z0-9_]+)?-linux-gnu[a-z0-9_]* )
/home/wangshuai/femu-swang/build-femu/meson-private/cmake_libudev/CMakeLists.txt(22):  list(APPEND LIB_ARCH_LIST i386-linux-gnu )
/home/wangshuai/femu-swang/build-femu/meson-private/cmake_libudev/CMakeLists.txt(21):  if(x86_64-linux-gnu MATCHES [a-z0-9_]+(-[a-z0-9_]+)?-linux-gnu[a-z0-9_]* )
/home/wangshuai/femu-swang/build-femu/meson-private/cmake_libudev/CMakeLists.txt(22):  list(APPEND LIB_ARCH_LIST x86_64-linux-gnu )
/home/wangshuai/femu-swang/build-femu/meson-private/cmake_libudev/CMakeLists.txt(28):  set(MESON_ARCH_LIST i386-linux-gnu;x86_64-linux-gnu )
/home/wangshuai/femu-swang/build-femu/meson-private/cmake_libudev/CMakeLists.txt(29):  set(MESON_PATHS_LIST /usr/local;/usr;/;/usr;/usr/local;/usr/X11R6;/usr/pkg;/opt )
/home/wangshuai/femu-swang/build-femu/meson-private/cmake_libudev/CMakeLists.txt(30):  set(MESON_CMAKE_ROOT /usr/share/cmake-3.16 )
/home/wangshuai/femu-swang/build-femu/meson-private/cmake_libudev/CMakeLists.txt(31):  set(MESON_CMAKE_SYSROOT  )
/home/wangshuai/femu-swang/build-femu/meson-private/cmake_libudev/CMakeLists.txt(32):  set(MESON_FIND_ROOT_PATH  )
/home/wangshuai/femu-swang/build-femu/meson-private/cmake_libudev/CMakeLists.txt(34):  message(STATUS /usr/local;/usr;/;/usr;/usr/local;/usr/X11R6;/usr/pkg;/opt )
